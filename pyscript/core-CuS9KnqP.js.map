{"version":3,"file":"core-CuS9KnqP.js","sources":["../src/zero-redirect.js","../node_modules/sticky-module/esm/index.js","../node_modules/@webreflection/utils/src/with-resolvers.js","../node_modules/polyscript/esm/interpreter/_io.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../node_modules/polyscript/esm/utils.js","../node_modules/polyscript/esm/interpreter/_utils.js","../node_modules/coincident/dist/flatted.js","../node_modules/polyscript/esm/interpreter/_python.js","../node_modules/polyscript/esm/interpreter/dummy.js","../node_modules/polyscript/esm/python/mip.js","../node_modules/polyscript/esm/3rd-party.js","../node_modules/polyscript/esm/interpreter/_nativefs.js","../node_modules/polyscript/esm/interpreter/micropython.js","../node_modules/gc-hook/esm/index.js","../node_modules/polyscript/esm/interpreter/pyodide.js","../node_modules/polyscript/esm/interpreter/ruby-wasm-wasi.js","../node_modules/polyscript/esm/interpreter/wasmoon.js","../node_modules/polyscript/esm/interpreter/webr.js","../node_modules/polyscript/esm/interpreters.js","../node_modules/basic-devtools/esm/index.js","../node_modules/polyscript/esm/workers.js","../node_modules/coincident/dist/flatted_encoder.js","../node_modules/coincident/src/proxy/traps.js","../node_modules/coincident/src/utils/encoder.js","../node_modules/coincident/src/json/encoder.js","../node_modules/proxy-target/esm/types.js","../node_modules/coincident/src/utils/shared.js","../node_modules/coincident/src/window/types.js","../node_modules/coincident/src/proxy/encoder.js","../node_modules/coincident/src/window/constants.js","../node_modules/coincident/src/transfer.js","../node_modules/coincident/src/utils.js","../node_modules/coincident/src/main.js","../node_modules/next-resolver/index.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/coincident/src/window/symbol.js","../node_modules/coincident/src/window/events.js","../node_modules/coincident/src/proxy/main.js","../node_modules/js-proxy/esm/heap.js","../node_modules/polyscript/esm/worker/xworker.js","../node_modules/coincident/src/window/main.js","../node_modules/polyscript/esm/loader.js","../node_modules/to-json-callback/esm/index.js","../node_modules/polyscript/esm/hooks.js","../node_modules/polyscript/esm/worker/hook.js","../node_modules/polyscript/esm/worker/class.js","../node_modules/polyscript/esm/errors.js","../node_modules/polyscript/esm/worker/url.js","../node_modules/polyscript/esm/script-handler.js","../node_modules/polyscript/esm/listeners.js","../node_modules/polyscript/esm/xworker.js","../node_modules/polyscript/esm/custom.js","../node_modules/polyscript/esm/index.js","../src/types.js","../src/all-done.js","../src/plugins.js","../src/exceptions.js","../src/fetch.js","../src/config.js","../src/fs.js","../src/sync.js","../src/plugins-helper.js","../node_modules/type-checked-collections/esm/index.js","../src/stdlib.js","../src/stdlib/pyscript.js","../src/hooks.js","../src/plugins/codemirror.js","../src/core.js"],"sourcesContent":["/* eslint no-unused-vars: 0 */\ntry {\n    crypto.randomUUID();\n} catch (_) {\n    if (location.href.startsWith(\"http://0.0.0.0\"))\n        location.href = location.href.replace(\"0.0.0.0\", \"localhost\");\n}\n","/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","//@ts-check\r\n\r\n/**\r\n * @template T\r\n * @typedef {{promise: Promise<T>, resolve: (value: T) => void, reject: (reason?: any) => void}} Resolvers\r\n */\r\n\r\n//@ts-ignore\r\nconst withResolvers = Promise.withResolvers;\r\n\r\n/**\r\n * @template T\r\n * @type {() => Resolvers<T>}\r\n */\r\nexport default withResolvers.bind(Promise);\r\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\nfunction fixedRelative(path) {\n    'use strict';\n    return path.startsWith('.') ? absoluteURL(path, this) : path;\n}\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    fixedRelative,\n    nodeInfo,\n};\n","import fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","const{getPrototypeOf:e}=Object,r=e=>{const r=typeof e;switch(r){case\"function\":case\"undefined\":return\"\";case\"object\":return null===e?\"null\":\"object\";default:return r}};let t=\"coincident-\";try{new SharedArrayBuffer(4,{maxByteLength:8}),t+=crypto.randomUUID()}catch(e){t+=Math.random().toString(36).substring(2)}var n={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};const{defineProperty:s}=Object,a=e=>{switch(e[o++]){case n.array:{const r=e[o++],t=[];e[o-2]=t;for(let n=0;n<r;n++)t[n]=a(e);return t}case n.object:{const r=e[o++],t={};e[o-2]=t;for(let n=0;n<r;n++)t[a(e)]=a(e);return t}case n.string:{const r=e[o++];return e[o-2]=r,r}case n.ref:return e[e[o++]];case n.number:return e[o++];case n.bigint:return BigInt(e[o++]);case n.true:return!0;case n.false:return!1;case n.null:return null;case n.undefined:return;case n.buffer:{const r=e[o++],t=e[o++],n=[r];t&&n.push({maxByteLength:t});const s=new ArrayBuffer(...n);e[o-3]=s;const a=new Uint8Array(s,0,r);for(let t=0;t<r;t++)a[t]=e[o++];return s}case n.view:{const r=e[o++],t=e[o++],n=e[o++],s=o-4,c=[a(e),t];n&&c.push(n);const u=new globalThis[r](...c);return e[s]=u,u}case n.symbol:return(r=e[o++]).startsWith(\"Symbol.\")?Symbol[r.slice(r.indexOf(\".\")+1)]:Symbol.for(r);case n.date:{const r=new Date(e[o++]);return e[o-2]=r,r}case n.map:{const r=e[o++],t=new Map;e[o-2]=t;for(let n=0;n<r;n++){const r=a(e),n=a(e);void 0!==r&&t.set(r,n)}return t}case n.set:{const r=e[o++],t=new Set;e[o-2]=t;for(let n=0;n<r;n++){const r=a(e);void 0!==r&&t.add(r)}return t}case n.regexp:{const r=e[o++],t=e[o++],n=new RegExp(r,t);return e[o-3]=n,n}case n.error:{const r=globalThis[e[o++]]||Error,t=e[o++],n=e[o++],a=new r(t,{cause:e[o++]});return e[o-5]=s(a,\"stack\",{value:n}),a}default:throw new TypeError(`Unknown type: ${e[o-1]}`)}var r},{parse:c}=JSON;let o=0;const u=e=>{return r=c(e),o=0,r.length?a(r):void 0;var r},{isArray:f}=Array,{isView:i}=ArrayBuffer,{stringify:l}=JSON,b=(e,r,t)=>{const s=r.get(t);return\"number\"==typeof s?(e.push(n.ref,s),!0):(r.set(t,e.length),!1)},h=(t,s,a,c=r(a))=>{switch(c){case\"null\":t.push(n.null);break;case\"object\":if(b(t,s,a))break;switch(!0){case f(a):{const e=a.length;t.push(n.array,e);for(let r=0;r<e;r++)h(t,s,a[r]);break}case i(a):{const{BYTES_PER_ELEMENT:r,buffer:c,byteOffset:o,length:u}=a;if(t.push(n.view,(r=>{for(;!(r.name in globalThis);)r=e(r);return r.name})(a.constructor),o,u!==(c.byteLength-o)/r?u:0),b(t,s,c))break;a=c}case a instanceof ArrayBuffer:{const e=a.byteLength,r=a.resizable?a.maxByteLength:0;if(t.push(n.buffer,e,r),e){const r=new Uint8Array(a,0,e);for(let e=0;e<r.length;e+=32767)t.push.apply(t,r.subarray(e,e+32767))}break}case a instanceof Date:t.push(n.date,+a);break;case a instanceof Map:{const e=t.push(n.map,0);let c=0;for(const[e,n]of a){const a=r(e),o=r(n);a&&o&&(h(t,s,e,a),h(t,s,n,o),c++)}t[e-1]=c;break}case a instanceof Set:{const e=t.push(n.set,0);let c=0;for(const e of a){const n=r(e);n&&(h(t,s,e,n),c++)}t[e-1]=c;break}case a instanceof RegExp:t.push(n.regexp,a.source,a.flags);break;case a instanceof Error:t.push(n.error,a.name,a.message,a.stack,a.cause);break;default:{if(\"toJSON\"in a){const e=a.toJSON();if(e===a){t.push(n.object,0);break}if(b(t,s,a=e))break}const e=t.push(n.object,0);let c=0;for(const e in a){const n=a[e],o=r(n);o&&(h(t,s,e,\"string\"),h(t,s,n,o),c++)}t[e-1]=c;break}}break;case\"boolean\":t.push(a?n.true:n.false);break;case\"string\":if(b(t,s,a))break;t.push(n.string,a);break;case\"bigint\":t.push(n[c],a.toString());break;case\"symbol\":{const e=(e=>{const r=String(e).slice(7,-1);return r.startsWith(\"Symbol.\")||Symbol.keyFor(e)?r:\"\"})(a);if(e){t.push(n[c],e);break}}case\"\":t.push(n.undefined);break;default:t.push(n[c],a)}},p=e=>l((e=>{const r=[];return h(r,new Map,e),r})(e));export{u as decode,p as encode};\n","import * as FLATTED from 'coincident/flatted';\nconst JSON = { parse: FLATTED.decode, stringify: FLATTED.encode };\n\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:text/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL, fixedRelative } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.25.0') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages.map(fixedRelative, baseURL));\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray, fixedRelative } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.5') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        if (packages) packages = packages.map(fixedRelative, baseURL);\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(indexURL);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            packages = packages.sort();\n            // packages are uniquely stored as JSON key\n            const key = stringify(packages);\n            if (storage.has(key)) {\n                const blob = new Blob(\n                    [storage.get(key)],\n                    { type: 'application/json' },\n                );\n                // this should be used to bootstrap loadPyodide\n                options.lockFileURL = URL.createObjectURL(blob);\n                // versions are not currently understood by pyodide when\n                // a lockFileURL is used instead of micropip.install(packages)\n                // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                // https://github.com/pyscript/pyscript/issues/2245\n                options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                packages = null;\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.2') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","import withResolvers from '@webreflection/utils/with-resolvers';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","var e={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};let t=\"coincident-\";try{new SharedArrayBuffer(4,{maxByteLength:8}),t+=crypto.randomUUID()}catch(e){t+=Math.random().toString(36).substring(2)}const{getPrototypeOf:r}=Object,s=e=>{const t=typeof e;switch(t){case\"function\":case\"undefined\":return\"\";case\"object\":return null===e?\"null\":\"object\";default:return t}},{isArray:n}=Array,{isView:a}=ArrayBuffer,{stringify:o}=JSON,c=(t,r,s)=>{const n=r.get(s);return\"number\"==typeof n?(t.push(e.ref,n),!0):(r.set(s,t.length),!1)},f=(t,o,u,i=s(u))=>{switch(i){case\"null\":t.push(e.null);break;case\"object\":if(c(t,o,u))break;switch(!0){case n(u):{const r=u.length;t.push(e.array,r);for(let e=0;e<r;e++)f(t,o,u[e]);break}case a(u):{const{BYTES_PER_ELEMENT:s,buffer:n,byteOffset:a,length:f}=u;if(t.push(e.view,(e=>{for(;!(e.name in globalThis);)e=r(e);return e.name})(u.constructor),a,f!==(n.byteLength-a)/s?f:0),c(t,o,n))break;u=n}case u instanceof ArrayBuffer:{const r=u.byteLength,s=u.resizable?u.maxByteLength:0;if(t.push(e.buffer,r,s),r){const e=new Uint8Array(u,0,r);for(let r=0;r<e.length;r+=32767)t.push.apply(t,e.subarray(r,r+32767))}break}case u instanceof Date:t.push(e.date,+u);break;case u instanceof Map:{const r=t.push(e.map,0);let n=0;for(const[e,r]of u){const a=s(e),c=s(r);a&&c&&(f(t,o,e,a),f(t,o,r,c),n++)}t[r-1]=n;break}case u instanceof Set:{const r=t.push(e.set,0);let n=0;for(const e of u){const r=s(e);r&&(f(t,o,e,r),n++)}t[r-1]=n;break}case u instanceof RegExp:t.push(e.regexp,u.source,u.flags);break;case u instanceof Error:t.push(e.error,u.name,u.message,u.stack,u.cause);break;default:{if(\"toJSON\"in u){const r=u.toJSON();if(r===u){t.push(e.object,0);break}if(c(t,o,u=r))break}const r=t.push(e.object,0);let n=0;for(const e in u){const r=u[e],a=s(r);a&&(f(t,o,e,\"string\"),f(t,o,r,a),n++)}t[r-1]=n;break}}break;case\"boolean\":t.push(u?e.true:e.false);break;case\"string\":if(c(t,o,u))break;t.push(e.string,u);break;case\"bigint\":t.push(e[i],u.toString());break;case\"symbol\":{const r=(e=>{const t=String(e).slice(7,-1);return t.startsWith(\"Symbol.\")||Symbol.keyFor(e)?t:\"\"})(u);if(r){t.push(e[i],r);break}}case\"\":t.push(e.undefined);break;default:t.push(e[i],u)}},u=e=>{const t=[];return f(t,new Map,e),t},i=e=>o(u(e)),b=(e=>({byteOffset:t=0}={})=>(r,s)=>{const n=e(r),a=n.length,o=2*a+t;s.byteLength<o&&s.grow(o);const c=new Uint16Array(s,t,a);for(let e=0;e<a;e++)c[e]=n.charCodeAt(e);return a})(i);export{i as encode,b as encoder,u as raw};\n","export const DESTROY = 'destroy';\n","export default encode => ({ byteOffset = 0 } = {}) => (value, buffer) => {\r\n  const string = encode(value);\r\n  const length = string.length;\r\n  const size = length * 2 + byteOffset;\r\n  if (buffer.byteLength < size) buffer.grow(size);\r\n  const ui16a = new Uint16Array(buffer, byteOffset, length);\r\n  for (let i = 0; i < length; i++)\r\n    ui16a[i] = string.charCodeAt(i);\r\n  return length;\r\n};\r\n","import createEncoder from '../utils/encoder.js';\r\n\r\nconst { stringify } = JSON;\r\n\r\nexport const encode = value => stringify(value);\r\n\r\nexport const encoder = createEncoder(stringify);\r\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","const { getPrototypeOf } = Object;\r\nexport const toConstructorName = constructor => {\r\n  while (!(constructor.name in globalThis))\r\n    constructor = getPrototypeOf(constructor);\r\n  return constructor.name;\r\n};\r\n\r\nexport const toSymbolName = value => {\r\n  const name = String(value).slice(7, -1);\r\n  return name.startsWith('Symbol.') || Symbol.keyFor(value) ? name : '';\r\n};\r\n\r\nexport const toSymbolValue = name => name.startsWith('Symbol.') ?\r\n  Symbol[name.slice(name.indexOf('.') + 1)] :\r\n  Symbol.for(name)\r\n;\r\n\r\nexport const toType = value => {\r\n  const type = typeof value;\r\n  switch (type) {\r\n    case 'function':\r\n    case 'undefined':\r\n      return '';\r\n    case 'object':\r\n      return value === null ? 'null' : 'object';\r\n    default:\r\n      return type;\r\n  }\r\n};\r\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default {\n  [ARRAY]: 0,\n  [BIGINT]: 1,\n  [BOOLEAN]: 2,\n  [FUNCTION]: 3,\n  [NULL]: 4,\n  [NUMBER]: 5,\n  [OBJECT]: 6,\n  [STRING]: 7,\n  [SYMBOL]: 8,\n  [UNDEFINED]: 9,\n  view: 10,\n};\n","import { BIGINT } from 'js-proxy/types';\r\n\r\nimport { toConstructorName } from '../utils/shared.js';\r\nimport createEncoder from '../utils/encoder.js';\r\nimport numeric from '../window/types.js';\r\n\r\nconst { stringify } = JSON;\r\n\r\nexport const encode = value => {\r\n  switch (value[0]) {\r\n    case numeric.view: {\r\n      const { constructor, buffer } = value[1];\r\n      value[1] = [toConstructorName(constructor), [...new Uint8Array(buffer)]];\r\n      break;\r\n    }\r\n    case numeric[BIGINT]: {\r\n      value[1] = value[1].toString();\r\n      break;\r\n    }\r\n  }\r\n  return stringify(value);\r\n};\r\n\r\nexport const encoder = createEncoder(encode);\r\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = 'de5dbea0';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","//@ts-check\r\n\r\n/** @type {ArrayBuffer[]} */\r\nconst nothing = [];\r\n\r\n/** @type {WeakSet<ArrayBuffer[]>} */\r\nconst buffers = new WeakSet;\r\n\r\n/**\r\n * @param {boolean} check\r\n * @param {any[]} args\r\n * @returns\r\n */\r\nexport const get = (check, args) => {\r\n  let transfer = nothing;\r\n  if (check && buffers.has(args.at(-1) || nothing)) {\r\n    transfer = args.pop();\r\n    buffers.delete(transfer);\r\n  }\r\n  return transfer;\r\n};\r\n\r\n/**\r\n * @param  {...ArrayBuffer} args\r\n * @returns\r\n */\r\nexport const set = (...args) => (buffers.add(args), args);\r\n","const {\r\n  assign,\r\n  create,\r\n} = Object;\r\n\r\n/* c8 ignore start */\r\nlet ID = 'coincident-', native = true;\r\ntry {\r\n  new SharedArrayBuffer(4, { maxByteLength: 8 });\r\n  ID += crypto.randomUUID();\r\n}\r\ncatch (_) {\r\n  native = false;\r\n  ID += Math.random().toString(36).substring(2);\r\n}\r\n/* c8 ignore end */\r\n\r\nconst byteOffset = 2 * Int32Array.BYTES_PER_ELEMENT;\r\nconst minByteLength = 0x7FFF; // throws at 0xFFFF via .apply(...)\r\nconst maxByteLength = 0x1000000;\r\n\r\nconst defaults = {\r\n  // ⚠️ mandatory: first int32 to notify, second one to store the written length\r\n  byteOffset,\r\n  // ⚠️ mandatory: to encode *into* a SharedArrayBuffer\r\n  useUTF16: true,\r\n  // ⚠️ mandatory: to satisfy circular/cyclic data\r\n  circular: true,\r\n};\r\n\r\nconst result = async (data, proxied, transform) => {\r\n  try {\r\n    const result = await proxied[data[1]].apply(null, data[2]);\r\n    data[1] = transform ? transform(result) : result;\r\n    data[2] = null;\r\n  }\r\n  catch (error) { data[2] = error }\r\n};\r\n\r\nconst set = (proxied, name, callback) => {\r\n  const ok = name !== 'then';\r\n  if (ok) proxied[name] = callback;\r\n  return ok;\r\n};\r\n\r\n/** @param {Event} event */\r\nconst stop = event => {\r\n  event.stopImmediatePropagation();\r\n  event.preventDefault();\r\n};\r\n\r\nexport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  maxByteLength,\r\n  minByteLength,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n};\r\n","import nextResolver from 'next-resolver';\r\n\r\nimport { encoder } from './json/encoder.js';\r\n\r\nimport * as transferred from './transfer.js';\r\n\r\nimport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n} from './utils.js';\r\n\r\n// @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n// Note: InstallTrigger is deprecated so once it's gone I do hope\r\n//       this workaround would be gone too!\r\nconst UID = 'InstallTrigger' in globalThis ? ID : '';\r\n\r\nconst { notify } = Atomics;\r\n\r\nconst Number = value => value;\r\n\r\nexport default options => {\r\n  const transform = options?.transform;\r\n  const encode = (options?.encoder || encoder)(defaults);\r\n  const checkTransferred = options?.transfer !== false;\r\n\r\n  class Worker extends globalThis.Worker {\r\n    constructor(url, options) {\r\n      const { port1: channel, port2 } = new MessageChannel;\r\n      const [ next, resolve ] = nextResolver(Number);\r\n      const callbacks = new Map;\r\n      const proxied = create(null);\r\n\r\n      let resolving = '';\r\n\r\n      const deadlock = (promise, name) => {\r\n        if (resolving) {\r\n          const t = setTimeout(\r\n            console.warn,\r\n            3e3,\r\n            `💀🔒 - is proxy.${resolving}() awaiting proxy.${name}() ?`\r\n          );\r\n          promise = promise.then(\r\n            result => {\r\n              clearTimeout(t);\r\n              return result;\r\n            },\r\n            error => {\r\n              clearTimeout(t);\r\n              return Promise.reject(error);\r\n            },\r\n          );\r\n        }\r\n        return promise;\r\n      };\r\n\r\n      super(url, assign({ type: 'module' }, options)).proxy = new Proxy(proxied, {\r\n        get: (_, name) => {\r\n          // the curse of potentially awaiting proxies in the wild\r\n          // requires this ugly guard around `then`\r\n          if (name === 'then') return;\r\n          let cb = callbacks.get(name);\r\n          if (!cb) {\r\n            callbacks.set(name, cb = (...args) => {\r\n              const transfer = transferred.get(checkTransferred, args);\r\n              const [uid, promise] = next();\r\n              channel.postMessage(\r\n                [uid, name, transform ? args.map(transform) : args],\r\n                transfer\r\n              );\r\n              return deadlock(promise, name);\r\n            });\r\n          }\r\n          return cb;\r\n        },\r\n        set\r\n      });\r\n\r\n      super.postMessage(UID, [port2]);\r\n\r\n      // @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n      if (native && UID) {\r\n        super.addEventListener('message', event => {\r\n          const { data } = event;\r\n          if (data?.ID === UID) {\r\n            stop(event);\r\n            channel.onmessage(data);\r\n          }\r\n        });\r\n      }\r\n\r\n      channel.onmessage = async ({ data }) => {\r\n        const i32 = data[0];\r\n        const type = typeof i32;\r\n        if (type === 'number')\r\n          resolve.apply(null, data);\r\n        else {\r\n          resolving = data[1];\r\n          await result(data, proxied, transform);\r\n          resolving = '';\r\n          if (type === 'string')\r\n            channel.postMessage(data);\r\n          else {\r\n            const result = data[2] || data[1];\r\n            // at index 1 we store the written length or 0, if undefined\r\n            i32[1] = result === void 0 ? 0 : encode(result, i32.buffer);\r\n            // at index 0 we set the SharedArrayBuffer as ready\r\n            i32[0] = 1;\r\n            notify(i32, 0);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    Worker,\r\n    native,\r\n    transfer: transferred.set,\r\n  };\r\n};\r\n","//@ts-check\r\n\r\nimport withResolvers from '@webreflection/utils/with-resolvers';\r\n\r\n/**\r\n * @template V\r\n * @callback Resolve\r\n * @param {V?} [value]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback Reject\r\n * @param {any?} [error]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @template V\r\n * @typedef {object} Resolvers\r\n * @prop {Promise<V>} promise\r\n * @prop {Resolve<V>} resolve\r\n * @prop {Reject} reject\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {() => [K, Promise<V>]} Next\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @callback Resolver\r\n * @param {K} uid\r\n * @param {V?} [value]\r\n * @param {any?} [error]\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {[Next<K,V>, Resolver<K,V>]} NextResolver\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @param {(id: number) => K} [as]\r\n * @returns\r\n */\r\nexport default (as = (id => /** @type {K} */(id))) => {\r\n  /** @type {Map<K,Resolvers<V>>} */\r\n  const map = new Map;\r\n  let id = 0;\r\n  return /** @type {NextResolver<K,V>} */([\r\n    /** @type {Next<K,V>} */\r\n    () => {\r\n      let uid;\r\n      do { uid = as(id++) }\r\n      while (map.has(uid));\r\n      const wr = /** @type {Resolvers<V>} */(/** @type {unknown} */(withResolvers()));\r\n      map.set(uid, wr);\r\n      return [uid, wr.promise];\r\n    },\r\n    /** @type {Resolver<K,V>} */\r\n    (uid, value, error) => {\r\n      const wr = map.get(uid);\r\n      map.delete(uid);\r\n      if (error) wr?.reject(error);\r\n      else wr?.resolve(value);\r\n    },\r\n  ]);\r\n};\r\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","import { SYMBOL } from 'js-proxy/types';\n\nconst symbols = new Map;\n\nfor (const s of Reflect.ownKeys(Symbol)) {\n  if (typeof Symbol[s] === SYMBOL) {\n    symbols.set(Symbol[s], s);\n    symbols.set(s, Symbol[s]);\n  }\n}\n\nexport const fromSymbol = value => (\n  symbols.get(value) ||\n  Symbol.for(value.slice(1))\n);\n\nexport const toSymbol = value => (\n  symbols.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport DEBUG from '../debug.js';\nimport { DESTROY } from './traps.js';\n\nimport { create as heap } from 'js-proxy/heap';\n\nimport numeric from '../window/types.js';\nimport { fromSymbol, toSymbol } from '../window/symbol.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from '../window/events.js';\n\nconst { isArray } = Array;\nconst { isView } = ArrayBuffer;\n\nexport default (resolve, __worker__) => {\n  const { clear, drop, get, hold } = heap();\n  const proxies = new Map;\n\n  const onGC = ref => {\n    if (DEBUG) console.info('main collecting', ref);\n    proxies.delete(ref);\n    __worker__(DESTRUCT, ref);\n  }\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    if (DEBUG) console.log('toEntry', TYPE, TYPE === 'function' ? value.name : '');\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        if (isView(value)) return [numeric.view, value];\n        return [numeric[OBJECT], hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  const fromEntry = ([numericTYPE, value]) => {\n    switch (numericTYPE) {\n      case numeric[OBJECT]: {\n        if (value === null) return globalThis;\n        if (typeof value === NUMBER) return get(value);\n        for (const key in value)\n          value[key] = fromEntry(value[key]);\n        return value;\n      };\n      case numeric[ARRAY]: {\n        if (typeof value === NUMBER) return get(value);\n        return value.map(fromEntry);\n      };\n      case numeric[FUNCTION]: {\n        switch (typeof value) {\n          case NUMBER: return get(value);\n          case STRING: {\n            let fn = proxies.get(value)?.deref();\n            if (!fn) {\n              fn = create(value, onGC, {\n                token: false,\n                return: function (...args) {\n                  if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                  return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                }\n              });\n              proxies.set(value, new WeakRef(fn));\n            }\n            return fn;\n          }\n        }\n      };\n      case numeric[SYMBOL]: return fromSymbol(value);\n      default: return value;\n    }\n  };\n\n  const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n  const asImport = name => import(resolve(name));\n  const globals = new Set;\n\n  return (TRAP, ref, ...args) => {\n    if (TRAP === DESTROY) {\n      if (DEBUG) console.warn('HEAP erased');\n      clear();\n    }\n    else if (TRAP === DESTRUCT) {\n      if (DEBUG) console.info(`Main ${globals.has(ref) ? 'ignoring' : 'dropping'}`, ref);\n      if (!globals.has(ref)) drop(ref);\n    }\n    else {\n      const method = Reflect[TRAP];\n      const target = ref == null ? globalThis : get(ref);\n      switch (TRAP) {\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args.map(fromEntry);\n          return toEntry(method(target, name, descriptor));\n        }\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\n          const descriptor = method(target, ...args.map(fromEntry));\n          if (descriptor) {\n            const { get, set, value } = descriptor;\n            if (get) descriptor.get = toEntry(get);\n            if (set) descriptor.set = toEntry(set);\n            if (value) descriptor.value = toEntry(value);\n          }\n          return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n        }\n        case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n        case GET: {\n          // global references should not be proxied more than once\n          // and should not ever be dropped from the main cache\n          // @see https://github.com/pyscript/pyscript/issues/2185\n          if (ref == null) {\n            const result = args[0][1] === 'import' ?\n              toEntry(asImport) :\n              asEntry(method, target, args)\n            ;\n            globals.add(result[1]);\n            if (DEBUG) console.info('Global', args[0][1], result[1]);\n            return result;\n          }\n        }\n        default: return asEntry(method, target, args);\n      }\n    }\n    return [numeric[UNDEFINED], void 0];\n  };\n};\n","import { NUMBER } from 'proxy-target/types';\n\nexport const create = () => {\n  const ids = new Map;\n  const values = new Map;\n  let uid = 0;\n  return {\n    /**\n     * Clear all references retained in the current heap.\n     */\n    clear: () => {\n      ids.clear();\n      values.clear();\n    },\n\n    /**\n     * Remove by id or value any previously stored reference.\n     * @param {number | unknown} id the held value by id or the value itself.\n     * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n     */\n    drop: id => {\n      const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n      const had = a.has(id);\n      if (had) {\n        b.delete(a.get(id));\n        a.delete(id);\n      }\n      return had;\n    },\n\n    /**\n     * Return the held value reference by its unique identifier.\n     * @param {number} id the unique identifier for the value reference.\n     * @returns {unknown} the related value / reference or undefined.\n     */\n    get: id => values.get(id),\n\n    /**\n     * Create once a unique number id for a generic value reference.\n     * @param {unknown} value a reference used to create a unique identifier.\n     * @returns {number} a unique identifier for that reference.\n     */\n    hold: value => {\n      if (!ids.has(value)) {\n        let id;\n        // a bit apocalyptic scenario but if this thread runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (/* c8 ignore next */ values.has(id = uid++));\n        ids.set(value, id);\n        values.set(id, value);\n      }\n      return ids.get(value);\n    },\n  };\n};\n\n// globally shared heap\nconst { clear, drop, get, hold } = create();\nexport { clear, drop, get, hold };\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport { encoder } from 'coincident/flatted/encoder';\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident({ encoder, transfer: false });\nexport default (...args) => new Worker(URL.createObjectURL(new Blob(['/*@*/'+\"const{assign:e}=Object,t=\\\"entries\\\",n=\\\"readonly\\\",r=\\\"readwrite\\\",s={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},o=({target:{result:e}})=>e;class a extends EventTarget{#e;#t;#n;async#r(n,r){const s=(await this.#e).transaction(t,r,this.#t);return new Promise(((r,o)=>e(n(s.objectStore(t)),{onsuccess:r,onerror:o})))}constructor(n,{durability:r=s.durability,prefix:a=s.prefix}=s){super(),this.#n=a,this.#t={durability:r},this.#e=new Promise(((r,s)=>{e(indexedDB.open(`${this.#n}/${n}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(t),n.oncomplete=()=>r(e)},onsuccess(e){r(o(e))},onerror(e){s(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(t){const{type:n,message:r,isTrusted:s}=t;return super.dispatchEvent(s?e(new Event(n),{message:r}):t)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),n).then(o)}async clear(){await this.#r((e=>e.clear()),r)}async delete(e){await this.#r((t=>t.delete(e)),r)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),n).then(o)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),n).then(o)}async keys(){return await this.#r((e=>e.getAllKeys()),n).then(o)}async set(e,t){return await this.#r((n=>n.put(t,e)),r),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class i extends Map{#s;#o;constructor(...e){super(),this.#s=new a(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}let c=\\\"coincident-\\\";try{new SharedArrayBuffer(4,{maxByteLength:8}),c+=crypto.randomUUID()}catch(kn){c+=Math.random().toString(36).substring(2)}const{fromCharCode:l}=String,{min:u}=Math;const{defineProperty:p}=Object,d=e=>{switch(e[y++]){case 1:{const t=e[y++],n=[];e[y-2]=n;for(let r=0;r<t;r++)n[r]=d(e);return n}case 2:{const t=e[y++],n={};e[y-2]=n;for(let r=0;r<t;r++)n[d(e)]=d(e);return n}case 4:{const t=e[y++];return e[y-2]=t,t}case 0:return e[e[y++]];case 3:return e[y++];case 12:return BigInt(e[y++]);case 5:return!0;case 6:return!1;case 7:return null;case 13:return;case 8:{const t=e[y++],n=e[y++],r=[t];n&&r.push({maxByteLength:n});const s=new ArrayBuffer(...r);e[y-3]=s;const o=new Uint8Array(s,0,t);for(let n=0;n<t;n++)o[n]=e[y++];return s}case 9:{const t=e[y++],n=e[y++],r=e[y++],s=y-4,o=[d(e),n];r&&o.push(r);const a=new globalThis[t](...o);return e[s]=a,a}case 10:return(t=e[y++]).startsWith(\\\"Symbol.\\\")?Symbol[t.slice(t.indexOf(\\\".\\\")+1)]:Symbol.for(t);case 11:{const t=new Date(e[y++]);return e[y-2]=t,t}case 14:{const t=e[y++],n=new Map;e[y-2]=n;for(let r=0;r<t;r++){const t=d(e),r=d(e);void 0!==t&&n.set(t,r)}return n}case 15:{const t=e[y++],n=new Set;e[y-2]=n;for(let r=0;r<t;r++){const t=d(e);void 0!==t&&n.add(t)}return n}case 16:{const t=e[y++],n=e[y++],r=new RegExp(t,n);return e[y-3]=r,r}case 17:{const t=globalThis[e[y++]]||Error,n=e[y++],r=e[y++],s=new t(n,{cause:e[y++]});return e[y-5]=p(s,\\\"stack\\\",{value:r}),s}default:throw new TypeError(`Unknown type: ${e[y-1]}`)}var t},{parse:f}=JSON;let y=0;const h=(e=>({byteOffset:t=0}={})=>(n,r)=>{const s=new Uint16Array(r,t,n);let o=\\\"\\\",a=0;for(;a<n;){const e=u(a+32767,n);o+=l.apply(null,s.subarray(a,e)),a=e}return e(o)})((e=>(e=>(y=0,e.length?d(e):void 0))(f(e)))),m=\\\"de5dbea0\\\",w=\\\"=\\\"+m,g=\\\"-\\\"+m,{create:b}=Object;let _=\\\"coincident-\\\",A=!0;try{new SharedArrayBuffer(4,{maxByteLength:8}),_+=crypto.randomUUID()}catch(e){A=!1,_+=Math.random().toString(36).substring(2)}const E=2*Int32Array.BYTES_PER_ELEMENT,v={byteOffset:E,useUTF16:!0,circular:!0},S=(e,t,n)=>{const r=\\\"then\\\"!==t;return r&&(e[t]=n),r},{fromCharCode:k}=String,{min:x}=Math;var B=e=>({byteOffset:t=0}={})=>(n,r)=>{const s=new Uint16Array(r,t,n);let o=\\\"\\\",a=0;for(;a<n;){const e=x(a+32767,n);o+=k.apply(null,s.subarray(a,e)),a=e}return e(o)};const{parse:j}=JSON,P=B(j),$=\\\"array\\\",T=\\\"bigint\\\",F=\\\"boolean\\\",O=\\\"function\\\",R=\\\"null\\\",M=\\\"number\\\",D=\\\"object\\\",L=\\\"string\\\",C=\\\"symbol\\\",I=\\\"undefined\\\";var N={[$]:0,[T]:1,[F]:2,[O]:3,[R]:4,[M]:5,[D]:6,[L]:7,[C]:8,[I]:9,view:10};const{parse:U}=JSON,H=B((e=>{const t=U(e);switch(t[0]){case N.view:{const[e,n]=t[1],r=new Uint8Array(n);t[1]=new globalThis[e](r.buffer);break}case N[I]:t[1]=void 0;break;case N[T]:t[1]=BigInt(t[1])}return t}));var W=Promise.withResolvers.bind(Promise);const J=[],q=new WeakSet,z=(...e)=>(q.add(e),e),K=Promise.withResolvers();addEventListener(\\\"message\\\",(e=>{(e=>{e.stopImmediatePropagation(),e.preventDefault()})(e),K.resolve([e.data,e.ports[0]])}),{once:!0});var G=async e=>{const[t,n]=await K.promise,r=A&&!!t,s=e?.transform,o=(e?.decoder||P)(v),a=!1!==e?.transfer;let i,c,l;if(A){const t=new SharedArrayBuffer(e?.minByteLength||32767,{maxByteLength:e?.maxByteLength||16777216});i=new Int32Array(t),({pause:c,wait:l}=Atomics),!c||r||t instanceof ArrayBuffer||(l=(e,t)=>{for(;e[t]<1;)c()})}const[u,p]=((e=e=>e)=>{const t=new Map;let n=0;return[()=>{let r;do{r=e(n++)}while(t.has(r));const s=W();return t.set(r,s),[r,s.promise]},(e,n,r)=>{const s=t.get(e);t.delete(e),r?s?.reject(r):s?.resolve(n)}]})(String),d=new Map,f=b(null),y=new Proxy(f,{get(e,c){if(\\\"then\\\"===c)return;let p=d.get(c);return p||d.set(c,p=(...e)=>{const p=((e,t)=>{let n=J;return e&&q.has(t.at(-1)||J)&&(n=t.pop(),q.delete(n)),n})(a,e),d=[i,c,s?e.map(s):e];if(A){r?postMessage({ID:t,data:d},p):n.postMessage(d,p),l(i,0),i[0]=0;const e=i[1]?o(i[1],i.buffer):void 0;if(e instanceof Error)throw e;return e}{const[e,t]=u();return d[0]=e,n.postMessage(d,p),t}}),p},set:S});return n.onmessage=async({data:e})=>{\\\"string\\\"==typeof e[0]?p.apply(null,e):(await(async(e,t,n)=>{try{const r=await t[e[1]].apply(null,e[2]);e[1]=n?n(r):r,e[2]=null}catch(t){e[2]=t}})(e,f,s),n.postMessage(e))},{native:A,proxy:y,transfer:z}};const Y=\\\"apply\\\",V=\\\"construct\\\",X=\\\"defineProperty\\\",Z=\\\"deleteProperty\\\",Q=\\\"get\\\",ee=\\\"getOwnPropertyDescriptor\\\",te=\\\"getPrototypeOf\\\",ne=\\\"has\\\",re=\\\"isExtensible\\\",se=\\\"ownKeys\\\",oe=\\\"preventExtensions\\\",ae=\\\"set\\\",ie=\\\"setPrototypeOf\\\";var ce=Object.freeze({__proto__:null,APPLY:Y,CONSTRUCT:V,DEFINE_PROPERTY:X,DELETE_PROPERTY:Z,GET:Q,GET_OWN_PROPERTY_DESCRIPTOR:ee,GET_PROTOTYPE_OF:te,HAS:ne,IS_EXTENSIBLE:re,OWN_KEYS:se,PREVENT_EXTENSION:oe,SET:ae,SET_PROTOTYPE_OF:ie});const le=\\\"destruct\\\";function ue(){return this}const pe=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`%c${String(t)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),e(t)})),de=Object.create(null),fe=(e,t,{debug:n,handler:r,return:s,token:o=e}=de)=>{const a=s||new Proxy(e,r||de),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),pe.register(...i),a},{Object:ye,Proxy:he,Reflect:me}=globalThis,{isArray:we}=Array,{ownKeys:ge}=me,{create:be,hasOwn:_e,values:Ae}=ye,Ee=(e,t)=>t===$?e[0]:t===O?e():t===D?e.$:e,ve=(e,t,n,r)=>{const s={type:{value:t}},o=_e(e,\\\"valueOf\\\");for(const a of Ae(ce)){let i=r(e[a]||me[a]);if(o&&a===Q){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,Ee(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return be(e,s)},Se=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case D:case I:r||(r=!1);case O:break;default:r=!1,t===e&&(t=ye(e))}const s=new he(t,n),{destruct:o}=n;return o?fe(e,o,{token:r,return:s}):s},ke=e=>t=>{const n=typeof t;return n===D?t?e.get(t)?.[0]??(e=>we(e)?$:D)(t):R:n},xe=e=>t=>{let n=typeof t;switch(n){case D:if(!t){n=R;break}case O:const r=e.get(t);r&&([n,t]=r)}return[n,t]},Be=e=>((e=>{pe.unregister(e)})(e),e);var je=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:Be,pair:xe(t),typeOf:ke(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of ge(e)){if(_e(o,t))continue;const a=e[t];switch(t){case $:{const e=ve(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(Se(t,[t],e,...n),$,t);break}case O:{const e=ve(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(Se(t,(r=t,ue.bind(r)),e,...n),O,t);var r};break}case D:{const e=ve(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(Se(t,{$:t},e,...n),D,t);break}default:{const e=ve(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(Se(n,n,e,...r),t,n);break}}}return o};const{drop:Pe,get:$e,hold:Te}=(()=>{const e=new Map,t=new Map;let n=0;return{clear:()=>{e.clear(),t.clear()},drop:n=>{const[r,s]=typeof n===M?[t,e]:[e,t],o=r.has(n);return o&&(s.delete(r.get(n)),r.delete(n)),o},get:e=>t.get(e),hold:r=>{if(!e.has(r)){let s;for(;t.has(s=n++););e.set(r,s),t.set(s,r)}return e.get(r)}}})(),Fe=new Map;for(const e of Reflect.ownKeys(Symbol))typeof Symbol[e]===C&&(Fe.set(Symbol[e],e),Fe.set(e,Symbol[e]));const Oe=e=>Fe.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,{isArray:Re}=Array,{isView:Me}=ArrayBuffer,{[Y]:De}=Reflect;var Le=(e,t)=>{const n=new Map,r=(e,t)=>{let r=n.get(e)?.deref();return r||n.set(e,new WeakRef(r=t(e))),r},s=([e,t])=>{switch(e){case N[D]:return null==t?globalThis:typeof t===M?r(t,l.object):t;case N[$]:return typeof t===M?r(t,l.array):t;case N[O]:return typeof t===M?r(t,l.function):$e(parseInt(t));case N[C]:return(e=>Fe.get(e)||Symbol.for(e.slice(1)))(t);default:return t}},o=e=>{let[n,r]=p(e);switch(n){case D:if(r==globalThis||null==r)r=null;else if(typeof r===D){if(r=t(r),Re(r))return[N[$],r.map(o)];if(Me(r))return[N.view,r];{const e={};for(const t in r)e[t]=o(r[t]);r=e}}return[N[D],r];case $:return[N[$],typeof r===M?r:t(r).map(o)];case O:return[N[O],typeof r===O?String(Te(t(r))):r];case C:return[N[C],Oe(e)];default:return[N[n],r]}},a=(...t)=>s(e(...t)),i={[X]:(e,t,n)=>a(X,e,o(t),o(n)),[Z]:(e,t)=>a(Z,e,o(t)),[Q]:(e,t)=>a(Q,e,o(t)),[te]:e=>a(te,e),[ee]:(e,t)=>{const n=a(ee,e,o(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=s(e)),t&&(n.set=s(t)),r&&(n.value=s(r))}return n},[ne]:(e,t)=>a(ne,e,o(t)),[re]:e=>a(re,e),[se]:e=>a(se,e).map(s),[oe]:e=>a(oe,e),[ae]:(e,t,n)=>a(ae,e,o(t),o(n)),[ie]:(e,t)=>a(ie,e,o(t)),[le](t){n.delete(t),e(le,t)}},c={[D]:i,[$]:i,[O]:{...i,[Y]:(e,...t)=>a(Y,e,...t.map(o)),[V]:(e,...t)=>a(V,e,...t.map(o))}},{proxy:l,isProxy:u,pair:p}=je(c);return{isProxy:u,global:l.object(null),method:async(e,t,...n)=>{const r=parseInt(t);switch(e){case Y:{const[e,t]=n;return o(await De($e(r),s(e),t.map(s)))}case le:Pe(r)}}}};const Ce={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},Ie=new WeakMap,Ne=e=>{const t=e||console,n={buffered:He,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return Ie.set(t,n),t}}},Ue=new TextDecoder,He=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(Ue.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},We=(e,...t)=>Ce[typeof e](e,...t),{isArray:Je}=Array,{assign:qe,create:ze,defineProperty:Ke,entries:Ge}=Object,{all:Ye,resolve:Ve}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Xe=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href;function Ze(e){return e.startsWith(\\\".\\\")?Xe(e,this):e}const Qe=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},et=e=>Function(`'use strict';return (${e})`)(),tt=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),nt=Symbol.for(\\\"polyscript.js_modules\\\"),rt=new Map;Ke(globalThis,nt,{value:rt}),new Proxy(rt,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const st=(e,t)=>!t.startsWith(\\\"_\\\"),ot=(e,t)=>new Proxy(e,{has:st,get:(e,n)=>e[t][n]}),at=(e,t)=>import(e).then((e=>{rt.set(t,{...e})})),it=e=>new Promise(((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(qe(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),ct=e=>/\\\\.css$/i.test(new URL(e).pathname),lt=(e,t)=>e.has(t),ut=e=>[...e.keys()];var pt=(e,t,n,r)=>{const s=globalThis[nt];if(n)for(let[e,t]of Ge(n)){let n=s.get(t);n&&!Je(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:lt,ownKeys:ut,get:(e,s)=>{let o=e.get(s);if(Je(o)){let a=o;o=null;for(let e of a)e=Xe(e,r),ct(e)?n.importCSS(e):(n.importJS(e,s),o=t[nt].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const dt=new Map,ft=e=>dt.get(e),yt=(e,t)=>{try{return Function(\\\"require\\\",t)(ft)}catch(t){Ie.get(e).stderr(t)}};var ht={type:\\\"dummy\\\",module:()=>\\\"data:text/javascript,\\\",engine:e=>Ne().get(e),registerJSModule(e,t,n){dt.set(t,n)},run:yt,runAsync:yt,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(ft,n)}catch(t){Ie.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const mt=Object.getOwnPropertyDescriptors(Response.prototype),wt=e=>\\\"function\\\"==typeof e,gt={get:(e,t)=>mt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!wt(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,mt[t]):((e,t)=>wt(t)?t.bind(e):t)(e,e[t])};var bt=(e,...t)=>new Proxy(fetch(e,...t),gt);const _t=!globalThis.window,At=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):vt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},Et=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},vt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},St=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},kt=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},xt=(e,t)=>bt(Xe(e,t)).arrayBuffer(),Bt=(e,t,n,r)=>Ye((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(Je(r))return r.map((n=>({url:kt([e,n]),path:kt([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:kt([t,s])}]}))})(n).map((({url:n,path:s})=>xt(n,r).then((n=>e.writeFile(t,s,n)))))),jt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,Pt=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),$t=(e,t,n,r)=>Ye((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of Ge(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,Pt(o,t))}else{const e=Pt(s,t),a=jt(e,Pt(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>xt(n,r).then((r=>e.writeFile(t,s,r,n)))))),Tt=({main:e,worker:t},n)=>{const r=[];if(t&&_t)for(let[e,s]of Ge(t))e=Xe(e,n),r.push(at(e,s));if(e&&!_t)for(let[t,s]of Ge(e))t=Xe(t,n),ct(t)?it(t):r.push(at(t,s));return Ye(r)},Ft=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},{getPrototypeOf:Ot}=Object,Rt=e=>{const t=typeof e;switch(t){case\\\"function\\\":case\\\"undefined\\\":return\\\"\\\";case\\\"object\\\":return null===e?\\\"null\\\":\\\"object\\\";default:return t}};let Mt=\\\"coincident-\\\";try{new SharedArrayBuffer(4,{maxByteLength:8}),Mt+=crypto.randomUUID()}catch(Ot){Mt+=Math.random().toString(36).substring(2)}var Dt={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};const{defineProperty:Lt}=Object,Ct=e=>{switch(e[Nt++]){case Dt.array:{const t=e[Nt++],n=[];e[Nt-2]=n;for(let r=0;r<t;r++)n[r]=Ct(e);return n}case Dt.object:{const t=e[Nt++],n={};e[Nt-2]=n;for(let r=0;r<t;r++)n[Ct(e)]=Ct(e);return n}case Dt.string:{const t=e[Nt++];return e[Nt-2]=t,t}case Dt.ref:return e[e[Nt++]];case Dt.number:return e[Nt++];case Dt.bigint:return BigInt(e[Nt++]);case Dt.true:return!0;case Dt.false:return!1;case Dt.null:return null;case Dt.undefined:return;case Dt.buffer:{const t=e[Nt++],n=e[Nt++],r=[t];n&&r.push({maxByteLength:n});const s=new ArrayBuffer(...r);e[Nt-3]=s;const o=new Uint8Array(s,0,t);for(let n=0;n<t;n++)o[n]=e[Nt++];return s}case Dt.view:{const t=e[Nt++],n=e[Nt++],r=e[Nt++],s=Nt-4,o=[Ct(e),n];r&&o.push(r);const a=new globalThis[t](...o);return e[s]=a,a}case Dt.symbol:return(t=e[Nt++]).startsWith(\\\"Symbol.\\\")?Symbol[t.slice(t.indexOf(\\\".\\\")+1)]:Symbol.for(t);case Dt.date:{const t=new Date(e[Nt++]);return e[Nt-2]=t,t}case Dt.map:{const t=e[Nt++],n=new Map;e[Nt-2]=n;for(let r=0;r<t;r++){const t=Ct(e),r=Ct(e);void 0!==t&&n.set(t,r)}return n}case Dt.set:{const t=e[Nt++],n=new Set;e[Nt-2]=n;for(let r=0;r<t;r++){const t=Ct(e);void 0!==t&&n.add(t)}return n}case Dt.regexp:{const t=e[Nt++],n=e[Nt++],r=new RegExp(t,n);return e[Nt-3]=r,r}case Dt.error:{const t=globalThis[e[Nt++]]||Error,n=e[Nt++],r=e[Nt++],s=new t(n,{cause:e[Nt++]});return e[Nt-5]=Lt(s,\\\"stack\\\",{value:r}),s}default:throw new TypeError(`Unknown type: ${e[Nt-1]}`)}var t},{parse:It}=JSON;let Nt=0;const{isArray:Ut}=Array,{isView:Ht}=ArrayBuffer,{stringify:Wt}=JSON,Jt=(e,t,n)=>{const r=t.get(n);return\\\"number\\\"==typeof r?(e.push(Dt.ref,r),!0):(t.set(n,e.length),!1)},qt=(e,t,n,r=Rt(n))=>{switch(r){case\\\"null\\\":e.push(Dt.null);break;case\\\"object\\\":if(Jt(e,t,n))break;switch(!0){case Ut(n):{const r=n.length;e.push(Dt.array,r);for(let s=0;s<r;s++)qt(e,t,n[s]);break}case Ht(n):{const{BYTES_PER_ELEMENT:r,buffer:s,byteOffset:o,length:a}=n;if(e.push(Dt.view,(e=>{for(;!(e.name in globalThis);)e=Ot(e);return e.name})(n.constructor),o,a!==(s.byteLength-o)/r?a:0),Jt(e,t,s))break;n=s}case n instanceof ArrayBuffer:{const t=n.byteLength,r=n.resizable?n.maxByteLength:0;if(e.push(Dt.buffer,t,r),t){const r=new Uint8Array(n,0,t);for(let t=0;t<r.length;t+=32767)e.push.apply(e,r.subarray(t,t+32767))}break}case n instanceof Date:e.push(Dt.date,+n);break;case n instanceof Map:{const r=e.push(Dt.map,0);let s=0;for(const[r,o]of n){const n=Rt(r),a=Rt(o);n&&a&&(qt(e,t,r,n),qt(e,t,o,a),s++)}e[r-1]=s;break}case n instanceof Set:{const r=e.push(Dt.set,0);let s=0;for(const r of n){const n=Rt(r);n&&(qt(e,t,r,n),s++)}e[r-1]=s;break}case n instanceof RegExp:e.push(Dt.regexp,n.source,n.flags);break;case n instanceof Error:e.push(Dt.error,n.name,n.message,n.stack,n.cause);break;default:{if(\\\"toJSON\\\"in n){const r=n.toJSON();if(r===n){e.push(Dt.object,0);break}if(Jt(e,t,n=r))break}const r=e.push(Dt.object,0);let s=0;for(const r in n){const o=n[r],a=Rt(o);a&&(qt(e,t,r,\\\"string\\\"),qt(e,t,o,a),s++)}e[r-1]=s;break}}break;case\\\"boolean\\\":e.push(n?Dt.true:Dt.false);break;case\\\"string\\\":if(Jt(e,t,n))break;e.push(Dt.string,n);break;case\\\"bigint\\\":e.push(Dt[r],n.toString());break;case\\\"symbol\\\":{const t=(e=>{const t=String(e).slice(7,-1);return t.startsWith(\\\"Symbol.\\\")||Symbol.keyFor(e)?t:\\\"\\\"})(n);if(t){e.push(Dt[r],t);break}}case\\\"\\\":e.push(Dt.undefined);break;default:e.push(Dt[r],n)}},zt={parse:e=>{return t=It(e),Nt=0,t.length?Ct(t):void 0;var t},stringify:e=>Wt((e=>{const t=[];return qt(t,new Map,e),t})(e))},Kt=new WeakMap,Gt=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await $t(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await Bt(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await Tt(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},Yt=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await Kt.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new i(e);return await t.sync(),t},n.JSON=zt),e.registerJsModule(t,n)},Vt=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},Xt=(e,t,...n)=>{try{return e.runPython(We(t),...n)}catch(t){Ie.get(e).stderr(t)}},Zt=async(e,t,...n)=>{try{return await e.runPythonAsync(We(t),...n)}catch(t){Ie.get(e).stderr(t)}},Qt=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Ie.get(e).stderr(t)}};var en=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const tn=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e);async function nn(e,t){return new Promise(((n,r)=>{e.syncfs(t,(e=>{e?r(e):n()}))}))}function rn(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await sn(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach((function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)})),i.sort();const c=[];if(Object.keys(o.entries).forEach((function(e){n.entries[e]||(c.push(e),a++)})),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):vt(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await nn(t,!0),{syncfs:async()=>await nn(t,!1)}}}const sn=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},on=(e,t)=>{try{e.mkdir(t)}catch(e){}},an=Ft(\\\"mpy\\\");var cn={type:\\\"micropython\\\",module:(e=\\\"1.25.0\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=Ne({stderr:He(console.error),stdout:He(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),an(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=ln.bind(this,i,r);return Kt.set(i,c),await Gt(this,an,i,t,r),this.writeFile(i,\\\"./mip.py\\\",en),t.packages&&(an(\\\"Loading packages\\\"),await c(t.packages.map(Ze,r)),an(\\\"Loaded packages\\\")),an(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=rn(i._module)),i},registerJSModule:Yt,run:Xt,runAsync:Zt,runEvent:Qt,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=Vt(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-DxlTOqbw.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)on(s,i);else{on(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return At(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return At(i,t,n)}};async function ln(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Xe(s,t),r=await bt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const un={dict_converter:Object.fromEntries},{stringify:pn}=JSON;let dn=!1;const fn=e=>(...t)=>{try{return dn=!0,e(...t)}finally{dn=!1}};let yn=!1;const hn=()=>{if(yn)return;yn=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){dn=!1;let o=e.get(s)?.deref();if(!o)try{o=fe(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),dn=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return dn&&n(t),s(this,e,t)}},call:{value(e,...t){return dn&&n(t),s(this,e,t)}}})},mn=Ft(\\\"py\\\"),wn=new WeakMap;var gn={type:\\\"pyodide\\\",module:(e=\\\"0.27.5\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){_t||\\\"auto\\\"!==t.experimental_create_proxy||hn(),mn(\\\"Loading Pyodide\\\");let{packages:s,index_urls:o}=t;s&&(s=s.map(Ze,r)),mn(\\\"Loading Storage\\\");const a=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=new i(a),l={indexURL:a},u=\\\"never\\\"!==t.packages_cache;if(await c.sync(),u){if(s){s=s.sort();const e=pn(s);if(c.has(e)){const t=new Blob([c.get(e)],{type:\\\"application/json\\\"});l.lockFileURL=URL.createObjectURL(t),l.packages=s.map((e=>e.split(/[>=<]=/)[0])),s=null}}}else c.clear();mn(\\\"Loaded Storage\\\");const{stderr:p,stdout:d,get:f}=Ne(),y=await f(e({stderr:p,stdout:d,...l})),h=_n.bind(y);return o&&wn.set(y,o),Kt.set(y,h),await Gt(this,mn,y,t,r),s&&await h(s,c,u),await c.close(),l.lockFileURL&&URL.revokeObjectURL(l.lockFileURL),mn(\\\"Loaded Pyodide\\\"),y},registerJSModule:Yt,run:fn(Xt),runAsync:fn(Zt),runEvent:fn(Qt),transform:(e,t)=>bn.call(e,t),writeFile:(e,t,n,r)=>{const s=Vt(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return At({FS:o,PATH:a,PATH_FS:i},t,n)}};function bn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(un);if(e instanceof Map)return new Map([...e.entries()]);if(Je(e))return e.map(bn,this)}return e}async function _n(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,mn(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(wn.has(this)&&o.set_index_urls(wn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof i){const n=o.freeze();t.set(pn(e),n)}o.destroy()}const An=\\\"ruby-wasm-wasi\\\",En=An.replace(/\\\\W+/g,\\\"_\\\");var vn={type:An,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await bt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await $t(this,a,t.files,r),t.fetch&&await Bt(this,a,t.fetch,r),t.js_modules&&await Tt(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${En}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(We(t),...n),runAsync:(e,t,...n)=>e.evalAsync(We(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${En}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${An}`)}};var Sn={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=Ne(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await $t(this,c,n.files,s),n.fetch&&await Bt(this,c,n.fetch,s),n.js_modules&&await Tt(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(We(t),...n)}catch(t){Ie.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(We(t),...n)}catch(t){Ie.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Ie.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(vt(e,Et(t)),t=St(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const kn=new WeakMap,xn=async(e,t)=>{const{shelter:n,destroy:r,io:s}=kn.get(e),{output:o,result:a}=await n.captureR(We(t));for(const{type:e,data:t}of o)s[e](t);return fe(a,r,{token:!1})};var Bn={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.2\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=Ne(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return kn.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:Ie.get(o)}),t.files&&await $t(this,o,t.files,r),t.fetch&&await Bt(this,o,t.fetch,r),t.js_modules&&await Tt(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:xn,runAsync:xn,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const jn=new Map,Pn=new Map,$n=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=jn.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(Pn.set(t,e),s(r,e,n,o))))}}),Tn=e=>{for(const t of[].concat(e.type))jn.set(t,e)};for(const e of[ht,cn,gn,vn,Sn,Bn])Tn(e);const{parse:Fn}=JSON,On=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Xe(e),n]})(e,t);return\\\"json\\\"===s?n=bt(r).json():\\\"toml\\\"===s?n=bt(r).text().then(tn):\\\"string\\\"===s?n=Rn(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=Rn(n)),[n,e=r]},Rn=e=>{try{return Fn(e)}catch(t){return tn(e)}},Mn=\\\"BeforeRun\\\",Dn=\\\"AfterRun\\\",Ln=[`code${Mn}`,`code${Mn}Async`,`code${Dn}`,`code${Dn}Async`],Cn=[\\\"onWorker\\\",\\\"onReady\\\",`on${Mn}`,`on${Mn}Async`,`on${Dn}`,`on${Dn}Async`];function In(e,t){const{run:n,runAsync:r}=jn.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Nn=(e,t,n,r,s,o)=>{if(s||o){const a=In.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let Un,Hn,Wn;const Jn=(e,t)=>{addEventListener(e,t||(async t=>{try{await Un,Hn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{proxy:qn,native:zn,window:Kn,isWindowProxy:Gn}=await(async e=>{let t=!1;const n=e?.decoder||P,r=await G({...e,decoder(e){const r=n(e),s=H(e);return(e,n)=>t?(t=!1,s(e,n)):r(e,n)}}),s=r.proxy[w],{isProxy:o,global:a,method:i}=Le((function(...e){return t=!0,s.apply(this,e)}),e?.transform||(e=>e));return r.proxy[g]=i,{...r,window:a,isWindowProxy:o}})({decoder:h,transfer:!1,transform:e=>Wn?Wn(e):e}),Yn={polyfill:!zn,sync:qn,window:zn?Kn:null,isWindowProxy:Gn,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Jn(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Un=(async()=>{try{const{id:o,tag:c,type:l,custom:u,version:p,config:d,async:f}=e,y=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),h=await((e,t,n,r={})=>(t&&([r,t]=On(t,n,r)),Ve(r).then((n=>$n[e](n,t)))))(y,t,n,d),{js_modules:m}=Pn.get(y),w=m?.main,g=ze(jn.get(l)),b=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:Ie.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,u||l,d||{},h);let _=\\\"run\\\";if(f&&(_+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of Ln){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,tt(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,tt(t),...o);return r&&await s(e,r,...o),a}})(g,_,n,r);for(const n of Cn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=et(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}Nn(g,b,Yn,f,e,t)}let A,E,v,S=null,k=\\\"\\\";zn&&(({CustomEvent:A,document:E}=Kn),S=o&&E.getElementById(o)||null,v=e=>Qe(S,u||l,e,!0,A));const x=pt(Kn,qn,w,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,ot(r,e));t.registerJSModule(n,s,r)})(l,g,h,x),g.registerJSModule(h,\\\"polyscript\\\",{IDBMap:a,IDBMapSync:i,xworker:Yn,currentScript:S,config:b.config,js_modules:x,get target(){return!k&&S&&(\\\"SCRIPT\\\"===c?S.after(qe(Kn.document.createElement(`script-${u||l}`),{id:k=`${o}-target`})):(k=o,S.replaceChildren(),S.style.display=\\\"block\\\")),k}}),Hn=g.runEvent.bind(g,h),Wn=g.transform.bind(g,h),S&&v(\\\"ready\\\"),s?.onReady&&et(s?.onReady).call(g,In.call(g,b,h),Yn),await g[_](h,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(g.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";h.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&h.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return S&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),h}catch(e){postMessage(e)}})(),Jn(\\\"error\\\"),Jn(\\\"message\\\"),Jn(\\\"messageerror\\\"),zn&&addEventListener(\\\"py:progress\\\",(({type:e,detail:t})=>{Kn.dispatchEvent(new Kn.CustomEvent(e,{detail:t}))}))}));\\n\".replace(re,place)],{type:'text/javascript'})), ...args)\n/* c8 ignore stop */\n","import { DESTROY } from '../proxy/traps.js';\n\nimport { encoder as jsonEncoder } from '../json/encoder.js';\nimport { encoder as minimalEncoder } from '../proxy/encoder.js';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport coincident from '../main.js';\nimport callback from '../proxy/main.js';\n\nexport default options => {\n  let tracking = false;\n  const esm = options?.import;\n  const defaultEncoder = options?.encoder || jsonEncoder;\n  const exports = coincident({\n    ...options,\n    encoder(options) {\n      const original = defaultEncoder(options);\n      const minimal = minimalEncoder(options);\n      return (value, buffer) => {\n        if (tracking) {\n          tracking = false;\n          return minimal(value, buffer);\n        }\n        return original(value, buffer);\n      };\n    }\n  });\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n\n      const main = callback(\n        options?.import || esm || (name => new URL(name, location.href)),\n        proxy[WORKER]\n      );\n\n      proxy[MAIN] = function (...args) {\n        tracking = true;\n        return main.apply(this, args);\n      };\n    }\n    terminate() {\n      this.proxy[MAIN](DESTROY);\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n","export default new Map([\n    [\"py\", \"pyodide\"],\n    [\"mpy\", \"micropython\"],\n]);\n","import withResolvers from \"@webreflection/utils/with-resolvers\";\nimport TYPES from \"./types.js\";\n\nconst waitForIt = [];\n\nfor (const [TYPE] of TYPES) {\n    const selectors = [`script[type=\"${TYPE}\"]`, `${TYPE}-script`];\n    for (const element of document.querySelectorAll(selectors.join(\",\"))) {\n        const { promise, resolve } = withResolvers();\n        waitForIt.push(promise);\n        element.addEventListener(`${TYPE}:done`, resolve, { once: true });\n    }\n}\n\n// wait for all the things then cleanup\nPromise.all(waitForIt).then(() => {\n    dispatchEvent(new Event(\"py:all-done\"));\n});\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n    codemirror: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/codemirror.js\"\n        ),\n    [\"deprecations-manager\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/deprecations-manager.js\"\n        ),\n    donkey: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/donkey.js\"\n        ),\n    error: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/error.js\"\n        ),\n    [\"py-editor\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-editor.js\"\n        ),\n    [\"py-game\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-game.js\"\n        ),\n    [\"py-terminal\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-terminal.js\"\n        ),\n};\n","import { assign } from \"polyscript/exports\";\n\nconst CLOSEBUTTON =\n    \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' width='12px'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>\";\n\n/**\n * These error codes are used to identify the type of error that occurred.\n * @see https://pyscript.github.io/docs/latest/reference/exceptions.html?highlight=errors\n */\nexport const ErrorCode = {\n    GENERIC: \"PY0000\", // Use this only for development then change to a more specific error code\n    CONFLICTING_CODE: \"PY0409\",\n    BAD_CONFIG: \"PY1000\",\n    MICROPIP_INSTALL_ERROR: \"PY1001\",\n    BAD_PLUGIN_FILE_EXTENSION: \"PY2000\",\n    NO_DEFAULT_EXPORT: \"PY2001\",\n    TOP_LEVEL_AWAIT: \"PY9000\",\n    // Currently these are created depending on error code received from fetching\n    FETCH_ERROR: \"PY0001\",\n    FETCH_NAME_ERROR: \"PY0002\",\n    FETCH_UNAUTHORIZED_ERROR: \"PY0401\",\n    FETCH_FORBIDDEN_ERROR: \"PY0403\",\n    FETCH_NOT_FOUND_ERROR: \"PY0404\",\n    FETCH_SERVER_ERROR: \"PY0500\",\n    FETCH_UNAVAILABLE_ERROR: \"PY0503\",\n};\n\n/**\n * Keys of the ErrorCode object\n * @typedef {keyof ErrorCode} ErrorCodes\n * */\n\nexport class UserError extends Error {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * @param {string} messageType\n     * */\n    constructor(errorCode, message = \"\", messageType = \"text\") {\n        super(`(${errorCode}): ${message}`);\n        this.errorCode = errorCode;\n        this.messageType = messageType;\n        this.name = \"UserError\";\n    }\n}\n\nexport class FetchError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"FetchError\";\n    }\n}\n\nexport class InstallError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"InstallError\";\n    }\n}\n\n/**\n * Internal function for creating alert banners on the page\n * @param {string} message The message to be displayed to the user\n * @param {string} level The alert level of the message. Can be any string; 'error' or 'warning' cause matching messages to be emitted to the console\n * @param {string} [messageType=\"text\"] If set to \"html\", the message content will be assigned to the banner's innerHTML directly, instead of its textContent\n * @param {any} [logMessage=true] An additional flag for whether the message should be sent to the console log.\n */\nexport function _createAlertBanner(\n    message,\n    level,\n    messageType = \"text\",\n    logMessage = true,\n) {\n    switch (`log-${level}-${logMessage}`) {\n        case \"log-error-true\":\n            console.error(message);\n            break;\n        case \"log-warning-true\":\n            console.warn(message);\n            break;\n    }\n\n    const content = messageType === \"html\" ? \"innerHTML\" : \"textContent\";\n    const banner = assign(document.createElement(\"div\"), {\n        className: `alert-banner py-${level}`,\n        [content]: message,\n    });\n\n    if (level === \"warning\") {\n        const closeButton = assign(document.createElement(\"button\"), {\n            id: \"alert-close-button\",\n            innerHTML: CLOSEBUTTON,\n        });\n\n        banner.appendChild(closeButton).addEventListener(\"click\", () => {\n            banner.remove();\n        });\n    }\n\n    document.body.prepend(banner);\n}\n","import { FetchError, ErrorCode } from \"./exceptions.js\";\n\n/**\n * @param {Response} response\n * @returns\n */\nexport const getText = (response) => response.text();\n\n/**\n * This is a fetch wrapper that handles any non 200 responses and throws a\n * FetchError with the right ErrorCode. This is useful because our FetchError\n * will automatically create an alert banner.\n *\n * @param {string} url - URL to fetch\n * @param {Request} [options] - options to pass to fetch\n * @returns {Promise<Response>}\n */\nexport async function robustFetch(url, options) {\n    let response;\n\n    // Note: We need to wrap fetch into a try/catch block because fetch\n    // throws a TypeError if the URL is invalid such as http://blah.blah\n    try {\n        response = await fetch(url, options);\n    } catch (err) {\n        const error = err;\n        let errMsg;\n        if (url.startsWith(\"http\")) {\n            errMsg =\n                `Fetching from URL ${url} failed with error ` +\n                `'${error.message}'. Are your filename and path correct?`;\n        } else {\n            errMsg = `Polyscript: Access to local files\n        (using [[fetch]] configurations in &lt;py-config&gt;)\n        is not available when directly opening a HTML file;\n        you must use a webserver to serve the additional files.\n        See <a style=\"text-decoration: underline;\" href=\"https://github.com/pyscript/pyscript/issues/257#issuecomment-1119595062\">this reference</a>\n        on starting a simple webserver with Python.\n            `;\n        }\n        throw new FetchError(ErrorCode.FETCH_ERROR, errMsg);\n    }\n\n    // Note that response.ok is true for 200-299 responses\n    if (!response.ok) {\n        const errorMsg = `Fetching from URL ${url} failed with error ${response.status} (${response.statusText}). Are your filename and path correct?`;\n        switch (response.status) {\n            case 404:\n                throw new FetchError(ErrorCode.FETCH_NOT_FOUND_ERROR, errorMsg);\n            case 401:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAUTHORIZED_ERROR,\n                    errorMsg,\n                );\n            case 403:\n                throw new FetchError(ErrorCode.FETCH_FORBIDDEN_ERROR, errorMsg);\n            case 500:\n                throw new FetchError(ErrorCode.FETCH_SERVER_ERROR, errorMsg);\n            case 503:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAVAILABLE_ERROR,\n                    errorMsg,\n                );\n            default:\n                throw new FetchError(ErrorCode.FETCH_ERROR, errorMsg);\n        }\n    }\n    return response;\n}\n","/**\n * This file parses a generic <py-config> or config attribute\n * to use as base config for all py-script elements, importing\n * also a queue of plugins *before* the interpreter (if any) resolves.\n */\nimport { $$ } from \"basic-devtools\";\n\nimport TYPES from \"./types.js\";\nimport allPlugins from \"./plugins.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport { ErrorCode } from \"./exceptions.js\";\n\nconst { BAD_CONFIG, CONFLICTING_CODE } = ErrorCode;\n\nconst badURL = (url, expected = \"\") => {\n    let message = `(${BAD_CONFIG}): Invalid URL: ${url}`;\n    if (expected) message += `\\nexpected ${expected} content`;\n    throw new Error(message);\n};\n\n/**\n * Given a string, returns its trimmed content as text,\n * fetching it from a file if the content is a URL.\n * @param {string} config either JSON, TOML, or a file to fetch\n * @param {string?} type the optional type to enforce\n * @returns {{json: boolean, toml: boolean, text: string}}\n */\nexport const configDetails = async (config, type) => {\n    let text = config?.trim();\n    // we only support an object as root config\n    let url = \"\",\n        toml = false,\n        json = /^{/.test(text) && /}$/.test(text);\n    // handle files by extension (relaxing urls parts after)\n    if (!json && /\\.(\\w+)(?:\\?\\S*)?$/.test(text)) {\n        const ext = RegExp.$1;\n        if (ext === \"json\" && type !== \"toml\") json = true;\n        else if (ext === \"toml\" && type !== \"json\") toml = true;\n        else badURL(text, type);\n        url = text;\n        text = (await fetch(url).then(getText)).trim();\n    }\n    return { json, toml: toml || (!json && !!text), text, url };\n};\n\nconst conflictError = (reason) => new Error(`(${CONFLICTING_CODE}): ${reason}`);\n\nconst relative_url = (url, base = location.href) => new URL(url, base).href;\n\nconst syntaxError = (type, url, { message }) => {\n    let str = `(${BAD_CONFIG}): Invalid ${type}`;\n    if (url) str += ` @ ${url}`;\n    return new SyntaxError(`${str}\\n${message}`);\n};\n\nconst configs = new Map();\n\nfor (const [TYPE] of TYPES) {\n    /** @type {() => Promise<[...any]>} A Promise wrapping any plugins which should be loaded. */\n    let plugins;\n\n    /** @type {any} The PyScript configuration parsed from the JSON or TOML object*. May be any of the return types of JSON.parse() or toml-j0.4's parse() ( {number | string | boolean | null | object | Array} ) */\n    let parsed;\n\n    /** @type {Error | undefined} The error thrown when parsing the PyScript config, if any.*/\n    let error;\n\n    /** @type {string | undefined} The `configURL` field to normalize all config operations as opposite of guessing it once resolved */\n    let configURL;\n\n    let config,\n        type,\n        pyElement,\n        pyConfigs = $$(`${TYPE}-config`),\n        attrConfigs = $$(\n            [\n                `script[type=\"${TYPE}\"][config]:not([worker])`,\n                `${TYPE}-script[config]:not([worker])`,\n            ].join(\",\"),\n        );\n\n    // throw an error if there are multiple <py-config> or <mpy-config>\n    if (pyConfigs.length > 1) {\n        error = conflictError(`Too many ${TYPE}-config`);\n    } else {\n        // throw an error if there are <x-config> and config=\"x\" attributes\n        if (pyConfigs.length && attrConfigs.length) {\n            error = conflictError(\n                `Ambiguous ${TYPE}-config VS config attribute`,\n            );\n        } else if (pyConfigs.length) {\n            [pyElement] = pyConfigs;\n            config = pyElement.getAttribute(\"src\") || pyElement.textContent;\n            type = pyElement.getAttribute(\"type\");\n        } else if (attrConfigs.length) {\n            [pyElement, ...attrConfigs] = attrConfigs;\n            config = pyElement.getAttribute(\"config\");\n            // throw an error if dirrent scripts use different configs\n            if (\n                attrConfigs.some((el) => el.getAttribute(\"config\") !== config)\n            ) {\n                error = conflictError(\n                    \"Unable to use different configs on main\",\n                );\n            }\n        }\n    }\n\n    // catch possible fetch errors\n    if (!error && config) {\n        try {\n            const { json, toml, text, url } = await configDetails(config, type);\n            if (url) configURL = relative_url(url);\n            config = text;\n            if (json || type === \"json\") {\n                try {\n                    parsed = JSON.parse(text);\n                } catch (e) {\n                    error = syntaxError(\"JSON\", url, e);\n                }\n            } else if (toml || type === \"toml\") {\n                try {\n                    const { parse } = await import(\n                        /* webpackIgnore: true */ \"./3rd-party/toml.js\"\n                    );\n                    parsed = parse(text);\n                } catch (e) {\n                    error = syntaxError(\"TOML\", url, e);\n                }\n            }\n        } catch (e) {\n            error = e;\n        }\n    }\n\n    // parse all plugins and optionally ignore only\n    // those flagged as \"undesired\" via `!` prefix\n    plugins = async () => {\n        const toBeAwaited = [];\n        for (const [key, value] of Object.entries(allPlugins)) {\n            if (error) {\n                if (key === \"error\") {\n                    // show on page the config is broken, meaning that\n                    // it was not possible to disable error plugin neither\n                    // as that part wasn't correctly parsed anyway\n                    value().then(({ notify }) => notify(error.message));\n                }\n            } else if (!parsed?.plugins?.includes(`!${key}`)) {\n                toBeAwaited.push(value().then(({ default: p }) => p));\n            } else if (key === \"error\") {\n                toBeAwaited.push(value().then(({ notOnDOM }) => notOnDOM()));\n            }\n        }\n        return await Promise.all(toBeAwaited);\n    };\n\n    configs.set(TYPE, { config: parsed, configURL, plugins, error });\n}\n\nexport { configs, relative_url };\n","import IDBMap from \"@webreflection/idb-map\";\nimport withResolvers from \"@webreflection/utils/with-resolvers\";\nimport { assign } from \"polyscript/exports\";\nimport { $$ } from \"basic-devtools\";\n\nconst stop = (event) => {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n};\n\n// ⚠️ these two constants MUST be passed as `fs`\n//     within the worker onBeforeRunAsync hook!\nexport const NAMESPACE = \"@pyscript.fs\";\nexport const ERROR = \"storage permissions not granted\";\n\nexport const idb = new IDBMap(NAMESPACE);\n\n/**\n * Ask a user action via dialog and returns the directory handler once granted.\n * @param {{id?:string, mode?:\"read\"|\"readwrite\", hint?:\"desktop\"|\"documents\"|\"downloads\"|\"music\"|\"pictures\"|\"videos\"}} options\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nexport const getFileSystemDirectoryHandle = async (options) => {\n    if (!(\"showDirectoryPicker\" in globalThis)) {\n        return Promise.reject(\n            new Error(\"showDirectoryPicker is not supported\"),\n        );\n    }\n\n    const { promise, resolve, reject } = withResolvers();\n\n    const how = { id: \"pyscript\", mode: \"readwrite\", ...options };\n    if (options.hint) how.startIn = options.hint;\n\n    const transient = async () => {\n        try {\n            /* eslint-disable */\n            const handler = await showDirectoryPicker(how);\n            /* eslint-enable */\n            if ((await handler.requestPermission(how)) === \"granted\") {\n                resolve(handler);\n                return true;\n            }\n        } catch ({ message }) {\n            console.warn(message);\n        }\n        return false;\n    };\n\n    // in case the user decided to attach the event itself\n    // as opposite of relying our dialog walkthrough\n    if (navigator.userActivation?.isActive) {\n        if (!(await transient())) reject(new Error(ERROR));\n    } else {\n        const dialog = assign(document.createElement(\"dialog\"), {\n            className: \"pyscript-fs\",\n            innerHTML: [\n                \"<strong>ℹ️ Persistent FileSystem</strong><hr>\",\n                \"<p><small>PyScript would like to access a local folder.</small></p>\",\n                \"<div><button title='ok'>✅ Authorize</button>\",\n                \"<button title='cancel'>❌</button></div>\",\n            ].join(\"\"),\n        });\n\n        const [ok, cancel] = $$(\"button\", dialog);\n\n        ok.addEventListener(\"click\", async (event) => {\n            stop(event);\n            if (await transient()) dialog.close();\n        });\n\n        cancel.addEventListener(\"click\", async (event) => {\n            stop(event);\n            reject(new Error(ERROR));\n            dialog.close();\n        });\n\n        document.body.appendChild(dialog).showModal();\n    }\n\n    return promise;\n};\n","import { idb, getFileSystemDirectoryHandle } from \"./fs.js\";\n\nexport default {\n    // allow pyterminal checks to bootstrap\n    is_pyterminal: () => false,\n\n    /**\n     * 'Sleep' for the given number of seconds. Used to implement Python's time.sleep in Worker threads.\n     * @param {number} seconds The number of seconds to sleep.\n     */\n    sleep(seconds) {\n        return new Promise(($) => setTimeout($, seconds * 1000));\n    },\n\n    /**\n     * Ask a user action via dialog and returns the directory handler once granted.\n     * @param {string} uid\n     * @param {{id?:string, mode?:\"read\"|\"readwrite\", hint?:\"desktop\"|\"documents\"|\"downloads\"|\"music\"|\"pictures\"|\"videos\"}} options\n     * @returns {boolean}\n     */\n    async storeFSHandler(uid, options = {}) {\n        if (await idb.has(uid)) return true;\n        return getFileSystemDirectoryHandle(options).then(\n            async (handler) => {\n                await idb.set(uid, handler);\n                return true;\n            },\n            () => false,\n        );\n    },\n};\n","import { defineProperty } from \"polyscript/exports\";\n\n// helper for all script[type=\"py\"] out there\nconst before = (script) => {\n    defineProperty(document, \"currentScript\", {\n        configurable: true,\n        get: () => script,\n    });\n};\n\nconst after = () => {\n    delete document.currentScript;\n};\n\n// common life-cycle handlers for any node\nexport default async (main, wrap, element, hook) => {\n    const isAsync = hook.endsWith(\"Async\");\n    const isBefore = hook.startsWith(\"onBefore\");\n    // make it possible to reach the current target node via Python\n    // or clean up for other scripts executing around this one\n    (isBefore ? before : after)(element);\n    for (const fn of main(hook)) {\n        if (isAsync) await fn(wrap, element);\n        else fn(wrap, element);\n    }\n};\n","const any = () => true;\nconst error = message => {\n  throw new TypeError(message);\n};\n\nconst validator = (type, Class) => {\n  const checks = [];\n  if (type) {\n    for (const t of type.split(/\\s*\\|\\s*/)) {\n      if (t === 'object')\n        checks.push(v => v !== null && typeof v === t);\n      else if (t === 'null')\n        checks.push(v => v === null);\n      else\n        checks.push(v => typeof v === t);\n    }\n  }\n  if (Class) {\n    for (const C of [].concat(Class))\n      checks.push(o => o instanceof C);\n  }\n  switch (checks.length) {\n    case 0: return any;\n    case 1: return checks[0];\n    default: return v => checks.some(f => f(v));\n  }\n};\n\nconst failure = (type, Class, kind, onerror = error) => value => {\n  const message = [`Invalid ${typeof value} ${kind}: expected `];\n  if (type) {\n    message.push(type);\n    if (Class) message.push(' or ');\n  }\n  if (Class) {\n    message.push('an instanceof ');\n    message.push([].concat(Class).map(({name}) => name).join(' | '));\n  }\n  onerror(message.join(''), value);\n};\n\nconst checkFail = (options, kind = 'value') => {\n  const type = options?.typeof;\n  const Class = options?.instanceof;\n  return [\n    validator(type, Class),\n    failure(type, Class, kind, options?.onerror)\n  ];\n};\n\nconst createSet = Set => options => {\n  const [check, fail] = checkFail(options);\n  return class TypedSet extends Set {\n    add(value) {\n      return check(value) ? super.add(value) : fail(value);\n    }\n  };\n};\n\nexport const typedSet = createSet(Set);\nexport const typedWeakSet = createSet(WeakSet);\n\nconst createMap = Map => ([keyOptions, valueOptions]) => {\n  const [checkKey, failKey] = checkFail(keyOptions, 'key');\n  const [checkValue, failValue] = checkFail(valueOptions);\n  return class TypedMap extends Map {\n    set(key, value) {\n      if (!checkKey(key)) failKey(key);\n      if (!checkValue(value)) failValue(value);\n      return super.set(key, value);\n    }\n  };\n};\n\nexport const typedMap = createMap(Map);\nexport const typedWeakMap = createMap(WeakMap);\n","/**\n * Create through Python the pyscript module through\n * the artifact generated at build time.\n * This the returned value is a string that must be used\n * either before a worker execute code or when the module\n * is registered on the main thread.\n */\n\nimport pyscript from \"./stdlib/pyscript.js\";\n\nclass Ignore extends Array {\n    #add = false;\n    #paths;\n    #array;\n    constructor(array, ...paths) {\n        super();\n        this.#array = array;\n        this.#paths = paths;\n    }\n    push(...values) {\n        if (this.#add) super.push(...values);\n        return this.#array.push(...values);\n    }\n    path(path) {\n        for (const _path of this.#paths) {\n            // bails out at the first `true` value\n            if ((this.#add = path.startsWith(_path))) break;\n        }\n    }\n}\n\nconst { entries } = Object;\n\nconst python = [\n    \"import os as _os\",\n    \"from pathlib import Path as _Path\",\n    \"_path = None\",\n];\n\nconst ignore = new Ignore(python, \"-\");\n\nconst write = (base, literal) => {\n    for (const [key, value] of entries(literal)) {\n        ignore.path(`${base}/${key}`);\n        ignore.push(`_path = _Path(\"${base}/${key}\")`);\n        if (typeof value === \"string\") {\n            const code = JSON.stringify(value);\n            ignore.push(`_path.write_text(${code},encoding=\"utf-8\")`);\n        } else {\n            // @see https://github.com/pyscript/pyscript/pull/1813#issuecomment-1781502909\n            ignore.push(`if not _os.path.exists(\"${base}/${key}\"):`);\n            ignore.push(\"    _path.mkdir(parents=True, exist_ok=True)\");\n            write(`${base}/${key}`, value);\n        }\n    }\n};\n\nwrite(\".\", pyscript);\n\n// in order to fix js.document in the Worker case\n// we need to bootstrap pyscript module ASAP\npython.push(\"import pyscript as _pyscript\");\n\npython.push(\n    ...[\"_Path\", \"_path\", \"_os\", \"_pyscript\"].map((ref) => `del ${ref}`),\n);\npython.push(\"\\n\");\n\nexport const stdlib = python.join(\"\\n\");\nexport const optional = ignore.join(\"\\n\");\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n  \"pyscript\": {\n    \"__init__.py\": \"from polyscript import lazy_py_modules as py_import\\nfrom pyscript.magic_js import RUNNING_IN_WORKER,PyWorker,config,current_target,document,js_import,js_modules,sync,window\\nfrom pyscript.display import HTML,display\\nfrom pyscript.fetch import fetch\\nfrom pyscript.storage import Storage,storage\\nfrom pyscript.websocket import WebSocket\\nfrom pyscript.events import when,Event\\nif not RUNNING_IN_WORKER:from pyscript.workers import create_named_worker,workers\",\n    \"display.py\": \"_L='_repr_mimebundle_'\\n_K='image/svg+xml'\\n_J='application/json'\\n_I='__repr__'\\n_H='savefig'\\n_G='text/html'\\n_F='image/jpeg'\\n_E='application/javascript'\\n_D='utf-8'\\n_C='text/plain'\\n_B='image/png'\\n_A=None\\nimport base64,html,io,re\\nfrom pyscript.magic_js import current_target,document,window\\n_MIME_METHODS={_H:_B,'_repr_javascript_':_E,'_repr_json_':_J,'_repr_latex':'text/latex','_repr_png_':_B,'_repr_jpeg_':_F,'_repr_pdf_':'application/pdf','_repr_svg_':_K,'_repr_markdown_':'text/markdown','_repr_html_':_G,_I:_C}\\ndef _render_image(mime,value,meta):\\n\\tA=value\\n\\tif isinstance(A,bytes):A=base64.b64encode(A).decode(_D)\\n\\tB=re.compile('^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$')\\n\\tif len(A)>0 and not B.match(A):A=base64.b64encode(A.encode(_D)).decode(_D)\\n\\tC=f\\\"data:{mime};charset=utf-8;base64,{A}\\\";D=' '.join(['{k}=\\\"{v}\\\"'for(A,B)in meta.items()]);return f'<img src=\\\"{C}\\\" {D}></img>'\\ndef _identity(value,meta):return value\\n_MIME_RENDERERS={_C:html.escape,_G:_identity,_B:lambda value,meta:_render_image(_B,value,meta),_F:lambda value,meta:_render_image(_F,value,meta),_K:_identity,_J:_identity,_E:lambda value,meta:f\\\"<script>{value}<\\\\\\\\/script>\\\"}\\nclass HTML:\\n\\tdef __init__(A,html):A._html=html\\n\\tdef _repr_html_(A):return A._html\\ndef _eval_formatter(obj,print_method):\\n\\tB=obj;A=print_method\\n\\tif A==_I:return repr(B)\\n\\tif hasattr(B,A):\\n\\t\\tif A==_H:C=io.BytesIO();B.savefig(C,format='png');C.seek(0);return base64.b64encode(C.read()).decode(_D)\\n\\t\\treturn getattr(B,A)()\\n\\tif A==_L:return{},{}\\ndef _format_mime(obj):\\n\\tC=obj\\n\\tif isinstance(C,str):return html.escape(C),_C\\n\\tD=_eval_formatter(C,_L)\\n\\tif isinstance(D,tuple):E,I=D\\n\\telse:E=D\\n\\tA,F=_A,[]\\n\\tfor(H,B)in _MIME_METHODS.items():\\n\\t\\tif B in E:A=E[B]\\n\\t\\telse:A=_eval_formatter(C,H)\\n\\t\\tif A is _A:continue\\n\\t\\tif B not in _MIME_RENDERERS:F.append(B);continue\\n\\t\\tbreak\\n\\tif A is _A:\\n\\t\\tif F:window.console.warn(f\\\"Rendered object requested unavailable MIME renderers: {F}\\\")\\n\\t\\tA=repr(A);B=_C\\n\\telif isinstance(A,tuple):A,G=A\\n\\telse:G={}\\n\\treturn _MIME_RENDERERS[B](A,G),B\\ndef _write(element,value,append=False):\\n\\tB=element;C,D=_format_mime(value)\\n\\tif C=='\\\\\\\\n':return\\n\\tif append:A=document.createElement('div');B.append(A)\\n\\telse:\\n\\t\\tA=B.lastElementChild\\n\\t\\tif A is _A:A=B\\n\\tif D in(_E,_G):E=document.createRange().createContextualFragment(C);A.append(E)\\n\\telse:A.innerHTML=C\\ndef display(*E,target=_A,append=True):\\n\\tD=append;A=target\\n\\tif A is _A:A=current_target()\\n\\telif not isinstance(A,str):C=f\\\"target must be str or None, not {A.__class__.__name__}\\\";raise TypeError(C)\\n\\telif A=='':C='Cannot have an empty target';raise ValueError(C)\\n\\telif A.startswith('#'):A=A[1:]\\n\\tB=document.getElementById(A)\\n\\tif B is _A:C=f\\\"Invalid selector with id={A}. Cannot be found in the page.\\\";raise ValueError(C)\\n\\tif B.tagName=='SCRIPT'and hasattr(B,'target'):B=B.target\\n\\tfor F in E:\\n\\t\\tif not D:B.replaceChildren()\\n\\t\\t_write(B,F,append=D)\",\n    \"events.py\": \"import asyncio,inspect,sys\\nfrom functools import wraps\\nfrom pyscript.magic_js import document\\nfrom pyscript.ffi import create_proxy\\nfrom pyscript.util import is_awaitable\\nfrom pyscript import config\\nclass Event:\\n\\tdef __init__(A):A._listeners=[]\\n\\tdef trigger(C,result):\\n\\t\\tB=result\\n\\t\\tfor A in C._listeners:\\n\\t\\t\\tif is_awaitable(A):asyncio.create_task(A(B))\\n\\t\\t\\telse:A(B)\\n\\tdef add_listener(B,listener):\\n\\t\\tA=listener\\n\\t\\tif is_awaitable(A)or callable(A):\\n\\t\\t\\tif A not in B._listeners:B._listeners.append(A)\\n\\t\\telse:C='Listener must be callable or awaitable.';raise ValueError(C)\\n\\tdef remove_listener(A,*B):\\n\\t\\tif B:\\n\\t\\t\\tfor C in B:A._listeners.remove(C)\\n\\t\\telse:A._listeners=[]\\ndef when(target,*B,**D):\\n\\tG='handler';C=target;E=None\\n\\tif B and(callable(B[0])or is_awaitable(B[0])):E=B[0]\\n\\telif callable(D.get(G))or is_awaitable(D.get(G)):E=D.pop(G)\\n\\tif isinstance(C,str):\\n\\t\\tA=B[0]if B else D.pop('selector')\\n\\t\\tif not A:I='No selector provided.';raise ValueError(I)\\n\\t\\tfrom pyscript.web import Element as J,ElementCollection as K\\n\\t\\tif isinstance(A,str):F=document.querySelectorAll(A)\\n\\t\\telif isinstance(A,J):F=[A._dom_element]\\n\\t\\telif isinstance(A,K):F=[A._dom_element for A in A]\\n\\t\\telse:F=A if isinstance(A,list)else[A]\\n\\tdef H(func):\\n\\t\\tE='positional arguments';D='takes';A=func\\n\\t\\tif config['type']=='mpy':\\n\\t\\t\\tif is_awaitable(A):\\n\\t\\t\\t\\tasync def B(*C,**F):\\n\\t\\t\\t\\t\\ttry:return await A(*C,**F)\\n\\t\\t\\t\\t\\texcept TypeError as B:\\n\\t\\t\\t\\t\\t\\tif D in str(B)and E in str(B):return await A()\\n\\t\\t\\t\\t\\t\\traise\\n\\t\\t\\telse:\\n\\t\\t\\t\\tdef B(*C,**F):\\n\\t\\t\\t\\t\\ttry:return A(*C,**F)\\n\\t\\t\\t\\t\\texcept TypeError as B:\\n\\t\\t\\t\\t\\t\\tif D in str(B)and E in str(B):return A()\\n\\t\\t\\t\\t\\t\\traise\\n\\t\\telse:\\n\\t\\t\\tG=inspect.signature(A)\\n\\t\\t\\tif G.parameters:\\n\\t\\t\\t\\tif is_awaitable(A):\\n\\t\\t\\t\\t\\tasync def B(event):return await A(event)\\n\\t\\t\\t\\telse:B=A\\n\\t\\t\\telif is_awaitable(A):\\n\\t\\t\\t\\tasync def B(*B,**C):return await A()\\n\\t\\t\\telse:\\n\\t\\t\\t\\tdef B(*B,**C):return A()\\n\\t\\tB=wraps(A)(B)\\n\\t\\tif isinstance(C,Event):C.add_listener(B)\\n\\t\\telif isinstance(C,list)and all(isinstance(A,Event)for A in C):\\n\\t\\t\\tfor H in C:H.add_listener(B)\\n\\t\\telse:\\n\\t\\t\\tfor I in F:I.addEventListener(C,create_proxy(B))\\n\\t\\treturn B\\n\\treturn H(E)if E else H\",\n    \"fetch.py\": \"import json,js\\nfrom pyscript.util import as_bytearray\\nclass _Response:\\n\\tdef __init__(A,response):A._response=response\\n\\tdef __getattr__(A,attr):return getattr(A._response,attr)\\n\\tasync def arrayBuffer(B):\\n\\t\\tA=await B._response.arrayBuffer()\\n\\t\\tif hasattr(A,'to_py'):return A.to_py()\\n\\t\\treturn memoryview(as_bytearray(A))\\n\\tasync def blob(A):return await A._response.blob()\\n\\tasync def bytearray(A):B=await A._response.arrayBuffer();return as_bytearray(B)\\n\\tasync def json(A):return json.loads(await A.text())\\n\\tasync def text(A):return await A._response.text()\\nclass _DirectResponse:\\n\\t@staticmethod\\n\\tdef setup(promise,response):A=promise;A._response=_Response(response);return A._response\\n\\tdef __init__(B,promise):A=promise;B._promise=A;A._response=None;A.arrayBuffer=B.arrayBuffer;A.blob=B.blob;A.bytearray=B.bytearray;A.json=B.json;A.text=B.text\\n\\tasync def _response(A):\\n\\t\\tif not A._promise._response:await A._promise\\n\\t\\treturn A._promise._response\\n\\tasync def arrayBuffer(A):B=await A._response();return await B.arrayBuffer()\\n\\tasync def blob(A):B=await A._response();return await B.blob()\\n\\tasync def bytearray(A):B=await A._response();return await B.bytearray()\\n\\tasync def json(A):B=await A._response();return await B.json()\\n\\tasync def text(A):B=await A._response();return await B.text()\\ndef fetch(url,**B):C=js.JSON.parse(json.dumps(B));D=lambda response,*B:_DirectResponse.setup(A,response);A=js.fetch(url,C).then(D);_DirectResponse(A);return A\",\n    \"ffi.py\": \"try:\\n\\timport js;from pyodide.ffi import create_proxy as _cp,to_js as _py_tjs;from_entries=js.Object.fromEntries\\n\\tdef _tjs(value,**A):\\n\\t\\tB='dict_converter'\\n\\t\\tif not hasattr(A,B):A[B]=from_entries\\n\\t\\treturn _py_tjs(value,**A)\\nexcept:from jsffi import create_proxy as _cp;from jsffi import to_js as _tjs\\ncreate_proxy=_cp\\nto_js=_tjs\",\n    \"flatted.py\": \"import json as _json\\nclass _Known:\\n\\tdef __init__(A):A.key=[];A.value=[]\\nclass _String:\\n\\tdef __init__(A,value):A.value=value\\ndef _array_keys(value):\\n\\tA=[];B=0\\n\\tfor C in value:A.append(B);B+=1\\n\\treturn A\\ndef _object_keys(value):\\n\\tA=[]\\n\\tfor B in value:A.append(B)\\n\\treturn A\\ndef _is_array(value):return isinstance(value,(list,tuple))\\ndef _is_object(value):return isinstance(value,dict)\\ndef _is_string(value):return isinstance(value,str)\\ndef _index(known,input,value):B=value;A=known;input.append(B);C=str(len(input)-1);A.key.append(B);A.value.append(C);return C\\ndef _loop(keys,input,known,output):\\n\\tA=output\\n\\tfor B in keys:\\n\\t\\tC=A[B]\\n\\t\\tif isinstance(C,_String):_ref(B,input[int(C.value)],input,known,A)\\n\\treturn A\\ndef _ref(key,value,input,known,output):\\n\\tB=known;A=value\\n\\tif _is_array(A)and A not in B:B.append(A);A=_loop(_array_keys(A),input,B,A)\\n\\telif _is_object(A)and A not in B:B.append(A);A=_loop(_object_keys(A),input,B,A)\\n\\toutput[key]=A\\ndef _relate(known,input,value):\\n\\tB=known;A=value\\n\\tif _is_string(A)or _is_array(A)or _is_object(A):\\n\\t\\ttry:return B.value[B.key.index(A)]\\n\\t\\texcept:return _index(B,input,A)\\n\\treturn A\\ndef _transform(known,input,value):\\n\\tB=known;A=value\\n\\tif _is_array(A):\\n\\t\\tC=[]\\n\\t\\tfor F in A:C.append(_relate(B,input,F))\\n\\t\\treturn C\\n\\tif _is_object(A):\\n\\t\\tD={}\\n\\t\\tfor E in A:D[E]=_relate(B,input,A[E])\\n\\t\\treturn D\\n\\treturn A\\ndef _wrap(value):\\n\\tA=value\\n\\tif _is_string(A):return _String(A)\\n\\tif _is_array(A):\\n\\t\\tB=0\\n\\t\\tfor D in A:A[B]=_wrap(D);B+=1\\n\\telif _is_object(A):\\n\\t\\tfor C in A:A[C]=_wrap(A[C])\\n\\treturn A\\ndef parse(value,*C,**D):\\n\\tA=value;E=_json.loads(A,*C,**D);B=[]\\n\\tfor A in E:B.append(_wrap(A))\\n\\tinput=[]\\n\\tfor A in B:\\n\\t\\tif isinstance(A,_String):input.append(A.value)\\n\\t\\telse:input.append(A)\\n\\tA=input[0]\\n\\tif _is_array(A):return _loop(_array_keys(A),input,[A],A)\\n\\tif _is_object(A):return _loop(_object_keys(A),input,[A],A)\\n\\treturn A\\ndef stringify(value,*D,**E):\\n\\tB=_Known();input=[];C=[];A=int(_index(B,input,value))\\n\\twhile A<len(input):C.append(_transform(B,input,input[A]));A+=1\\n\\treturn _json.dumps(C,*D,**E)\",\n    \"fs.py\": \"mounted={}\\nasync def mount(path,mode='readwrite',root='',id='pyscript'):\\n\\tE=path;import js;from _pyscript import fs as A,interpreter as I;from pyscript.ffi import to_js as H;from pyscript.magic_js import RUNNING_IN_WORKER as J,sync;js.console.warn('experimental pyscript.fs ⚠️');B=None;C=f\\\"{E}@{id}\\\";F={'id':id,'mode':mode}\\n\\tif root!='':F['startIn']=root\\n\\tif J:\\n\\t\\tG=sync.storeFSHandler(C,H(F))\\n\\t\\tif isinstance(G,bool):D=G\\n\\t\\telse:D=await G\\n\\t\\tif D:from polyscript import IDBMap as K;L=K.new(A.NAMESPACE);B=await L.get(C)\\n\\t\\telse:raise RuntimeError(A.ERROR)\\n\\telse:\\n\\t\\tD=await A.idb.has(C)\\n\\t\\tif D:B=await A.idb.get(C)\\n\\t\\telse:B=await A.getFileSystemDirectoryHandle(H(F));await A.idb.set(C,B)\\n\\tmounted[E]=await I.mountNativeFS(E,B)\\nasync def sync(path):await mounted[path].syncfs()\\nasync def unmount(path):from _pyscript import interpreter as A;await sync(path);A._module.FS.unmount(path)\",\n    \"magic_js.py\": \"import json,sys,js as globalThis\\nfrom polyscript import config as _config,js_modules\\nfrom pyscript.util import NotSupported\\nRUNNING_IN_WORKER=not hasattr(globalThis,'document')\\nconfig=json.loads(globalThis.JSON.stringify(_config))\\nif'MicroPython'in sys.version:config['type']='mpy'\\nelse:config['type']='py'\\nclass JSModule:\\n\\tdef __init__(A,name):A.name=name\\n\\tdef __getattr__(B,field):\\n\\t\\tA=field\\n\\t\\tif not A.startswith('_'):return getattr(getattr(js_modules,B.name),A)\\nfor name in globalThis.Reflect.ownKeys(js_modules):sys.modules[f\\\"pyscript.js_modules.{name}\\\"]=JSModule(name)\\nsys.modules['pyscript.js_modules']=js_modules\\nif RUNNING_IN_WORKER:\\n\\timport polyscript;PyWorker=NotSupported('pyscript.PyWorker','pyscript.PyWorker works only when running in the main thread')\\n\\ttry:import js;window=polyscript.xworker.window;document=window.document;js.document=document;js_import=window.Function('return (...urls) => Promise.all(urls.map((url) => import(url)))')()\\n\\texcept:message='Unable to use `window` or `document` -> https://docs.pyscript.net/latest/faq/#sharedarraybuffer';globalThis.console.warn(message);window=NotSupported('pyscript.window',message);document=NotSupported('pyscript.document',message);js_import=None\\n\\tsync=polyscript.xworker.sync\\n\\tdef current_target():return polyscript.target\\nelse:\\n\\timport _pyscript;from _pyscript import PyWorker,js_import;window=globalThis;document=globalThis.document;sync=NotSupported('pyscript.sync','pyscript.sync works only when running in a worker')\\n\\tdef current_target():return _pyscript.target\",\n    \"media.py\": \"from pyscript import window\\nfrom pyscript.ffi import to_js\\nclass Device:\\n\\tdef __init__(A,device):A._dom_element=device\\n\\t@property\\n\\tdef id(self):return self._dom_element.deviceId\\n\\t@property\\n\\tdef group(self):return self._dom_element.groupId\\n\\t@property\\n\\tdef kind(self):return self._dom_element.kind\\n\\t@property\\n\\tdef label(self):return self._dom_element.label\\n\\tdef __getitem__(A,key):return getattr(A,key)\\n\\t@classmethod\\n\\tasync def load(E,audio=False,video=True):\\n\\t\\tC='video';B=video;A={};A['audio']=audio\\n\\t\\tif isinstance(B,bool):A[C]=B\\n\\t\\telse:\\n\\t\\t\\tA[C]={}\\n\\t\\t\\tfor D in B:A[C][D]=B[D]\\n\\t\\treturn await window.navigator.mediaDevices.getUserMedia(to_js(A))\\n\\tasync def get_stream(A):B=A.kind.replace('input','').replace('output','');C={B:{'deviceId':{'exact':A.id}}};return await A.load(**C)\\nasync def list_devices():return[Device(A)for A in await window.navigator.mediaDevices.enumerateDevices()]\",\n    \"storage.py\": \"_C='memoryview'\\n_B='bytearray'\\n_A='generic'\\nfrom polyscript import storage as _storage\\nfrom pyscript.flatted import parse as _parse\\nfrom pyscript.flatted import stringify as _stringify\\ndef _to_idb(value):\\n\\tA=value\\n\\tif A is None:return _stringify(['null',0])\\n\\tif isinstance(A,(bool,float,int,str,list,dict,tuple)):return _stringify([_A,A])\\n\\tif isinstance(A,bytearray):return _stringify([_B,list(A)])\\n\\tif isinstance(A,memoryview):return _stringify([_C,list(A)])\\n\\tB=f\\\"Unexpected value: {A}\\\";raise TypeError(B)\\ndef _from_idb(value):\\n\\tC=value;A,B=_parse(C)\\n\\tif A=='null':return\\n\\tif A==_A:return B\\n\\tif A==_B:return bytearray(B)\\n\\tif A==_C:return memoryview(bytearray(B))\\n\\treturn C\\nclass Storage(dict):\\n\\tdef __init__(B,store):A=store;super().__init__({A:_from_idb(B)for(A,B)in A.entries()});B.__store__=A\\n\\tdef __delitem__(A,attr):A.__store__.delete(attr);super().__delitem__(attr)\\n\\tdef __setitem__(B,attr,value):A=value;B.__store__.set(attr,_to_idb(A));super().__setitem__(attr,A)\\n\\tdef clear(A):A.__store__.clear();super().clear()\\n\\tasync def sync(A):await A.__store__.sync()\\nasync def storage(name='',storage_class=Storage):\\n\\tif not name:A='The storage name must be defined';raise ValueError(A)\\n\\treturn storage_class(await _storage(f\\\"@pyscript/{name}\\\"))\",\n    \"util.py\": \"import js,sys,inspect\\ndef as_bytearray(buffer):\\n\\tA=js.Uint8Array.new(buffer);B=A.length;C=bytearray(B)\\n\\tfor D in range(B):C[D]=A[D]\\n\\treturn C\\nclass NotSupported:\\n\\tdef __init__(A,name,error):object.__setattr__(A,'name',name);object.__setattr__(A,'error',error)\\n\\tdef __repr__(A):return f\\\"<NotSupported {A.name} [{A.error}]>\\\"\\n\\tdef __getattr__(A,attr):raise AttributeError(A.error)\\n\\tdef __setattr__(A,attr,value):raise AttributeError(A.error)\\n\\tdef __call__(A,*B):raise TypeError(A.error)\\ndef is_awaitable(obj):\\n\\tA=obj;from pyscript import config as B\\n\\tif B['type']=='mpy':\\n\\t\\tif'<closure <generator>'in repr(A):return True\\n\\t\\treturn inspect.isgeneratorfunction(A)\\n\\treturn inspect.iscoroutinefunction(A)\",\n    \"web.py\": \"_B='on_'\\n_A=None\\nfrom pyscript import document,when,Event\\nfrom pyscript.ffi import create_proxy\\ndef wrap_dom_element(dom_element):return Element.wrap_dom_element(dom_element)\\nclass Element:\\n\\telement_classes_by_tag_name={}\\n\\t@classmethod\\n\\tdef get_tag_name(A):return A.__name__.replace('_','')\\n\\t@classmethod\\n\\tdef register_element_classes(B,element_classes):\\n\\t\\tfor A in element_classes:C=A.get_tag_name();B.element_classes_by_tag_name[C]=A\\n\\t@classmethod\\n\\tdef unregister_element_classes(A,element_classes):\\n\\t\\tfor B in element_classes:C=B.get_tag_name();A.element_classes_by_tag_name.pop(C,_A)\\n\\t@classmethod\\n\\tdef wrap_dom_element(A,dom_element):B=dom_element;C=A.element_classes_by_tag_name.get(B.tagName.lower(),A);return C(dom_element=B)\\n\\tdef __init__(A,dom_element=_A,classes=_A,style=_A,**E):\\n\\t\\tA._dom_element=dom_element or document.createElement(type(A).get_tag_name());A._on_events={};C={}\\n\\t\\tfor(B,D)in E.items():\\n\\t\\t\\tif B.startswith(_B):F=A.get_event(B);F.add_listener(D)\\n\\t\\t\\telse:C[B]=D\\n\\t\\tA._classes=Classes(A);A._style=Style(A);A.update(classes=classes,style=style,**C)\\n\\tdef __eq__(A,obj):return isinstance(obj,Element)and obj._dom_element==A._dom_element\\n\\tdef __getitem__(B,key):\\n\\t\\tA=key\\n\\t\\tif isinstance(A,(int,slice)):return B.children[A]\\n\\t\\treturn B.find(A)\\n\\tdef __getattr__(B,name):\\n\\t\\tA=name\\n\\t\\tif A.startswith(_B):return B.get_event(A)\\n\\t\\tif A.endswith('_'):A=A[:-1]\\n\\t\\treturn getattr(B._dom_element,A)\\n\\tdef __setattr__(C,name,value):\\n\\t\\tB=value;A=name\\n\\t\\tif A.startswith('_'):super().__setattr__(A,B)\\n\\t\\telse:\\n\\t\\t\\tif A.endswith('_'):A=A[:-1]\\n\\t\\t\\tif A.startswith(_B):C._on_events[A]=B\\n\\t\\t\\tsetattr(C._dom_element,A,B)\\n\\tdef get_event(A,name):\\n\\t\\tB=name\\n\\t\\tif not B.startswith(_B):C=\\\"Event names must start with 'on_'.\\\";raise ValueError(C)\\n\\t\\tD=B[3:]\\n\\t\\tif not hasattr(A._dom_element,D):C=f\\\"Element has no '{D}' event.\\\";raise ValueError(C)\\n\\t\\tif B in A._on_events:return A._on_events[B]\\n\\t\\tE=Event();A._on_events[B]=E;A._dom_element.addEventListener(D,create_proxy(E.trigger));return E\\n\\t@property\\n\\tdef children(self):return ElementCollection.wrap_dom_elements(self._dom_element.children)\\n\\t@property\\n\\tdef classes(self):return self._classes\\n\\t@property\\n\\tdef parent(self):\\n\\t\\tif self._dom_element.parentElement is _A:return\\n\\t\\treturn Element.wrap_dom_element(self._dom_element.parentElement)\\n\\t@property\\n\\tdef style(self):return self._style\\n\\tdef append(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,Element):B._dom_element.appendChild(A._dom_element)\\n\\t\\t\\telif isinstance(A,ElementCollection):\\n\\t\\t\\t\\tfor D in A:B._dom_element.appendChild(D._dom_element)\\n\\t\\t\\telif isinstance(A,(list,tuple)):\\n\\t\\t\\t\\tfor E in A:B.append(E)\\n\\t\\t\\telse:\\n\\t\\t\\t\\ttry:A.tagName;B._dom_element.appendChild(A)\\n\\t\\t\\t\\texcept AttributeError:\\n\\t\\t\\t\\t\\ttry:\\n\\t\\t\\t\\t\\t\\tA.length\\n\\t\\t\\t\\t\\t\\tfor F in A:B._dom_element.appendChild(F)\\n\\t\\t\\t\\t\\texcept AttributeError:G=f'Element \\\"{A}\\\" is a proxy object, \\\"but not a valid element or a NodeList.';raise TypeError(G)\\n\\tdef clone(B,clone_id=_A):A=Element.wrap_dom_element(B._dom_element.cloneNode(True));A.id=clone_id;return A\\n\\tdef find(A,selector):return ElementCollection.wrap_dom_elements(A._dom_element.querySelectorAll(selector))\\n\\tdef show_me(A):A._dom_element.scrollIntoView()\\n\\tdef update(A,classes=_A,style=_A,**D):\\n\\t\\tC=style;B=classes\\n\\t\\tif B:A.classes.add(B)\\n\\t\\tif C:A.style.set(**C)\\n\\t\\tfor(E,F)in D.items():setattr(A,E,F)\\nclass Classes:\\n\\tdef __init__(A,element):A._element=element;A._class_list=A._element._dom_element.classList\\n\\tdef __contains__(A,item):return item in A._class_list\\n\\tdef __eq__(C,other):\\n\\t\\tA=other\\n\\t\\tif isinstance(A,Classes):B=list(A._class_list)\\n\\t\\telse:\\n\\t\\t\\ttry:B=iter(A)\\n\\t\\t\\texcept TypeError:return False\\n\\t\\treturn set(C._class_list)==set(B)\\n\\tdef __iter__(A):return iter(A._class_list)\\n\\tdef __len__(A):return A._class_list.length\\n\\tdef __repr__(A):return f\\\"Classes({\\\", \\\".join(A._class_list)})\\\"\\n\\tdef __str__(A):return' '.join(A._class_list)\\n\\tdef add(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,list):\\n\\t\\t\\t\\tfor D in A:B.add(D)\\n\\t\\t\\telse:B._class_list.add(A)\\n\\tdef contains(A,class_name):return class_name in A\\n\\tdef remove(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,list):\\n\\t\\t\\t\\tfor D in A:B.remove(D)\\n\\t\\t\\telse:B._class_list.remove(A)\\n\\tdef replace(A,old_class,new_class):A.remove(old_class);A.add(new_class)\\n\\tdef toggle(A,*C):\\n\\t\\tfor B in C:\\n\\t\\t\\tif B in A:A.remove(B)\\n\\t\\t\\telse:A.add(B)\\nclass HasOptions:\\n\\t@property\\n\\tdef options(self):\\n\\t\\tA=self\\n\\t\\tif not hasattr(A,'_options'):A._options=Options(A)\\n\\t\\treturn A._options\\nclass Options:\\n\\tdef __init__(A,element):A._element=element\\n\\tdef __getitem__(A,key):return A.options[key]\\n\\tdef __iter__(A):yield from A.options\\n\\tdef __len__(A):return len(A.options)\\n\\tdef __repr__(A):return f\\\"{A.__class__.__name__} (length: {len(A)}) {A.options}\\\"\\n\\t@property\\n\\tdef options(self):return[Element.wrap_dom_element(A)for A in self._element._dom_element.options]\\n\\t@property\\n\\tdef selected(self):return self.options[self._element._dom_element.selectedIndex]\\n\\tdef add(D,value=_A,html=_A,text=_A,before=_A,**B):\\n\\t\\tC=value;A=before\\n\\t\\tif C is not _A:B['value']=C\\n\\t\\tif html is not _A:B['innerHTML']=html\\n\\t\\tif text is not _A:B['text']=text\\n\\t\\tE=option(**B)\\n\\t\\tif A and isinstance(A,Element):A=A._dom_element\\n\\t\\tD._element._dom_element.add(E._dom_element,A)\\n\\tdef clear(A):\\n\\t\\twhile len(A)>0:A.remove(0)\\n\\tdef remove(A,index):A._element._dom_element.remove(index)\\nclass Style:\\n\\tdef __init__(A,element):A._element=element;A._style=A._element._dom_element.style\\n\\tdef __getitem__(A,key):return A._style.getPropertyValue(key)\\n\\tdef __setitem__(A,key,value):A._style.setProperty(key,value)\\n\\tdef remove(A,key):A._style.removeProperty(key)\\n\\tdef set(A,**B):\\n\\t\\tfor(C,D)in B.items():A._element._dom_element.style.setProperty(C,D)\\n\\t@property\\n\\tdef visible(self):return self._element._dom_element.style.visibility\\n\\t@visible.setter\\n\\tdef visible(self,value):self._element._dom_element.style.visibility=value\\nclass ContainerElement(Element):\\n\\tdef __init__(B,*C,children=_A,dom_element=_A,style=_A,classes=_A,**D):\\n\\t\\tsuper().__init__(dom_element=dom_element,style=style,classes=classes,**D)\\n\\t\\tfor A in list(C)+(children or[]):\\n\\t\\t\\tif isinstance(A,(Element,ElementCollection)):B.append(A)\\n\\t\\t\\telse:B._dom_element.insertAdjacentHTML('beforeend',A)\\n\\tdef __iter__(A):yield from A.children\\nclass ClassesCollection:\\n\\tdef __init__(A,collection):A._collection=collection\\n\\tdef __contains__(A,class_name):\\n\\t\\tfor B in A._collection:\\n\\t\\t\\tif class_name in B.classes:return True\\n\\t\\treturn False\\n\\tdef __eq__(B,other):A=other;return isinstance(A,ClassesCollection)and B._collection==A._collection\\n\\tdef __iter__(A):yield from A._all_class_names()\\n\\tdef __len__(A):return len(A._all_class_names())\\n\\tdef __repr__(A):return f\\\"ClassesCollection({A._collection!r})\\\"\\n\\tdef __str__(A):return' '.join(A._all_class_names())\\n\\tdef add(A,*B):\\n\\t\\tfor C in A._collection:C.classes.add(*B)\\n\\tdef contains(A,class_name):return class_name in A\\n\\tdef remove(A,*B):\\n\\t\\tfor C in A._collection:C.classes.remove(*B)\\n\\tdef replace(A,old_class,new_class):\\n\\t\\tfor B in A._collection:B.classes.replace(old_class,new_class)\\n\\tdef toggle(A,*B):\\n\\t\\tfor C in A._collection:C.classes.toggle(*B)\\n\\tdef _all_class_names(B):\\n\\t\\tA=set()\\n\\t\\tfor C in B._collection:\\n\\t\\t\\tfor D in C.classes:A.add(D)\\n\\t\\treturn A\\nclass StyleCollection:\\n\\tdef __init__(A,collection):A._collection=collection\\n\\tdef __getitem__(A,key):return[A.style[key]for A in A._collection._elements]\\n\\tdef __setitem__(A,key,value):\\n\\t\\tfor B in A._collection._elements:B.style[key]=value\\n\\tdef __repr__(A):return f\\\"StyleCollection({A._collection!r})\\\"\\n\\tdef remove(A,key):\\n\\t\\tfor B in A._collection._elements:B.style.remove(key)\\nclass ElementCollection:\\n\\t@classmethod\\n\\tdef wrap_dom_elements(A,dom_elements):return A([Element.wrap_dom_element(A)for A in dom_elements])\\n\\tdef __init__(A,elements):A._elements=elements;A._classes=ClassesCollection(A);A._style=StyleCollection(A)\\n\\tdef __eq__(A,obj):return isinstance(obj,ElementCollection)and obj._elements==A._elements\\n\\tdef __getitem__(B,key):\\n\\t\\tA=key\\n\\t\\tif isinstance(A,int):return B._elements[A]\\n\\t\\tif isinstance(A,slice):return ElementCollection(B._elements[A])\\n\\t\\treturn B.find(A)\\n\\tdef __iter__(A):yield from A._elements\\n\\tdef __len__(A):return len(A._elements)\\n\\tdef __repr__(A):return f\\\"{A.__class__.__name__} (length: {len(A._elements)}) {A._elements}\\\"\\n\\tdef __getattr__(A,name):return[getattr(A,name)for A in A._elements]\\n\\tdef __setattr__(C,name,value):\\n\\t\\tB=value;A=name\\n\\t\\tif A.startswith('_'):super().__setattr__(A,B)\\n\\t\\telse:\\n\\t\\t\\tfor D in C._elements:setattr(D,A,B)\\n\\t@property\\n\\tdef classes(self):return self._classes\\n\\t@property\\n\\tdef elements(self):return self._elements\\n\\t@property\\n\\tdef style(self):return self._style\\n\\tdef find(B,selector):\\n\\t\\tA=[]\\n\\t\\tfor C in B._elements:A.extend(C.find(selector))\\n\\t\\treturn ElementCollection(A)\\nclass a(ContainerElement):0\\nclass abbr(ContainerElement):0\\nclass address(ContainerElement):0\\nclass area(Element):0\\nclass article(ContainerElement):0\\nclass aside(ContainerElement):0\\nclass audio(ContainerElement):0\\nclass b(ContainerElement):0\\nclass base(Element):0\\nclass blockquote(ContainerElement):0\\nclass body(ContainerElement):0\\nclass br(Element):0\\nclass button(ContainerElement):0\\nclass canvas(ContainerElement):\\n\\tdef download(A,filename='snapped.png'):B=a(download=filename,href=A._dom_element.toDataURL());A.append(B);B._dom_element.click()\\n\\tdef draw(E,what,width=_A,height=_A):\\n\\t\\tC=height;B=width;A=what\\n\\t\\tif isinstance(A,Element):A=A._dom_element\\n\\t\\tD=E._dom_element.getContext('2d')\\n\\t\\tif B or C:D.drawImage(A,0,0,B,C)\\n\\t\\telse:D.drawImage(A,0,0)\\nclass caption(ContainerElement):0\\nclass cite(ContainerElement):0\\nclass code(ContainerElement):0\\nclass col(Element):0\\nclass colgroup(ContainerElement):0\\nclass data(ContainerElement):0\\nclass datalist(ContainerElement,HasOptions):0\\nclass dd(ContainerElement):0\\nclass del_(ContainerElement):0\\nclass details(ContainerElement):0\\nclass dialog(ContainerElement):0\\nclass div(ContainerElement):0\\nclass dl(ContainerElement):0\\nclass dt(ContainerElement):0\\nclass em(ContainerElement):0\\nclass embed(Element):0\\nclass fieldset(ContainerElement):0\\nclass figcaption(ContainerElement):0\\nclass figure(ContainerElement):0\\nclass footer(ContainerElement):0\\nclass form(ContainerElement):0\\nclass h1(ContainerElement):0\\nclass h2(ContainerElement):0\\nclass h3(ContainerElement):0\\nclass h4(ContainerElement):0\\nclass h5(ContainerElement):0\\nclass h6(ContainerElement):0\\nclass head(ContainerElement):0\\nclass header(ContainerElement):0\\nclass hgroup(ContainerElement):0\\nclass hr(Element):0\\nclass html(ContainerElement):0\\nclass i(ContainerElement):0\\nclass iframe(ContainerElement):0\\nclass img(Element):0\\nclass input_(Element):0\\nclass ins(ContainerElement):0\\nclass kbd(ContainerElement):0\\nclass label(ContainerElement):0\\nclass legend(ContainerElement):0\\nclass li(ContainerElement):0\\nclass link(Element):0\\nclass main(ContainerElement):0\\nclass map_(ContainerElement):0\\nclass mark(ContainerElement):0\\nclass menu(ContainerElement):0\\nclass meta(ContainerElement):0\\nclass meter(ContainerElement):0\\nclass nav(ContainerElement):0\\nclass object_(ContainerElement):0\\nclass ol(ContainerElement):0\\nclass optgroup(ContainerElement,HasOptions):0\\nclass option(ContainerElement):0\\nclass output(ContainerElement):0\\nclass p(ContainerElement):0\\nclass param(ContainerElement):0\\nclass picture(ContainerElement):0\\nclass pre(ContainerElement):0\\nclass progress(ContainerElement):0\\nclass q(ContainerElement):0\\nclass s(ContainerElement):0\\nclass script(ContainerElement):0\\nclass section(ContainerElement):0\\nclass select(ContainerElement,HasOptions):0\\nclass small(ContainerElement):0\\nclass source(Element):0\\nclass span(ContainerElement):0\\nclass strong(ContainerElement):0\\nclass style(ContainerElement):0\\nclass sub(ContainerElement):0\\nclass summary(ContainerElement):0\\nclass sup(ContainerElement):0\\nclass table(ContainerElement):0\\nclass tbody(ContainerElement):0\\nclass td(ContainerElement):0\\nclass template(ContainerElement):0\\nclass textarea(ContainerElement):0\\nclass tfoot(ContainerElement):0\\nclass th(ContainerElement):0\\nclass thead(ContainerElement):0\\nclass time(ContainerElement):0\\nclass title(ContainerElement):0\\nclass tr(ContainerElement):0\\nclass track(Element):0\\nclass u(ContainerElement):0\\nclass ul(ContainerElement):0\\nclass var(ContainerElement):0\\nclass video(ContainerElement):\\n\\tdef snap(E,to=_A,width=_A,height=_A):\\n\\t\\tH='CANVAS';G='Element to snap to must be a canvas.';C=height;B=width;A=to;B=B if B is not _A else E.videoWidth;C=C if C is not _A else E.videoHeight\\n\\t\\tif A is _A:A=canvas(width=B,height=C)\\n\\t\\telif isinstance(A,Element):\\n\\t\\t\\tif A.tag!='canvas':D=G;raise TypeError(D)\\n\\t\\telif getattr(A,'tagName','')==H:A=canvas(dom_element=A)\\n\\t\\telif isinstance(A,str):\\n\\t\\t\\tF=document.querySelectorAll(A)\\n\\t\\t\\tif F.length==0:D='No element with selector {to} to snap to.';raise TypeError(D)\\n\\t\\t\\tif F[0].tagName!=H:D=G;raise TypeError(D)\\n\\t\\t\\tA=canvas(dom_element=F[0])\\n\\t\\tA.draw(E,B,C);return A\\nclass wbr(Element):0\\nELEMENT_CLASSES=[a,abbr,address,area,article,aside,audio,b,base,blockquote,body,br,button,canvas,caption,cite,code,col,colgroup,data,datalist,dd,del_,details,dialog,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,i,iframe,img,input_,ins,kbd,label,legend,li,link,main,map_,mark,menu,meta,meter,nav,object_,ol,optgroup,option,output,p,param,picture,pre,progress,q,s,script,section,select,small,source,span,strong,style,sub,summary,sup,table,tbody,td,template,textarea,tfoot,th,thead,time,title,tr,track,u,ul,var,video,wbr]\\nElement.register_element_classes(ELEMENT_CLASSES)\\nclass Page:\\n\\tdef __init__(A):A.html=Element.wrap_dom_element(document.documentElement);A.body=Element.wrap_dom_element(document.body);A.head=Element.wrap_dom_element(document.head)\\n\\tdef __getitem__(A,selector):return A.find(selector)\\n\\t@property\\n\\tdef title(self):return document.title\\n\\t@title.setter\\n\\tdef title(self,value):document.title=value\\n\\tdef append(A,*B):A.body.append(*B)\\n\\tdef find(A,selector):return ElementCollection.wrap_dom_elements(document.querySelectorAll(selector))\\npage=Page()\",\n    \"websocket.py\": \"import js\\nfrom pyscript.ffi import create_proxy\\nfrom pyscript.util import as_bytearray\\ncode='code'\\nprotocols='protocols'\\nreason='reason'\\nmethods=['onclose','onerror','onmessage','onopen']\\nclass EventMessage:\\n\\tdef __init__(A,event):A._event=event\\n\\tdef __getattr__(B,attr):\\n\\t\\tA=getattr(B._event,attr)\\n\\t\\tif attr=='data'and not isinstance(A,str):\\n\\t\\t\\tif hasattr(A,'to_py'):return A.to_py()\\n\\t\\t\\treturn memoryview(as_bytearray(A))\\n\\t\\treturn A\\nclass WebSocket:\\n\\tCONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3\\n\\tdef __init__(E,**A):\\n\\t\\tD=A['url']\\n\\t\\tif protocols in A:B=js.WebSocket.new(D,A[protocols])\\n\\t\\telse:B=js.WebSocket.new(D)\\n\\t\\tobject.__setattr__(E,'_ws',B)\\n\\t\\tfor C in methods:\\n\\t\\t\\tif C in A:setattr(B,C,create_proxy(A[C]))\\n\\tdef __getattr__(A,attr):return getattr(A._ws,attr)\\n\\tdef __setattr__(B,attr,value):\\n\\t\\tC=value;A=attr\\n\\t\\tif A in methods:D=lambda e:C(EventMessage(e));setattr(B._ws,A,create_proxy(D))\\n\\t\\telse:setattr(B._ws,A,C)\\n\\tdef close(B,**A):\\n\\t\\tif code in A and reason in A:B._ws.close(A[code],A[reason])\\n\\t\\telif code in A:B._ws.close(A[code])\\n\\t\\telse:B._ws.close()\\n\\tdef send(B,data):\\n\\t\\tA=data\\n\\t\\tif isinstance(A,str):B._ws.send(A)\\n\\t\\telse:\\n\\t\\t\\tC=js.Uint8Array.new(len(A))\\n\\t\\t\\tfor(D,E)in enumerate(A):C[D]=E\\n\\t\\t\\tB._ws.send(C)\",\n    \"workers.py\": \"import js as _js\\nfrom polyscript import workers as _workers\\n_get=_js.Reflect.get\\ndef _set(script,name,value=''):script.setAttribute(name,value)\\nclass _ReadOnlyProxy:\\n\\tdef __getitem__(A,name):return _get(_workers,name)\\n\\tdef __getattr__(A,name):return _get(_workers,name)\\nworkers=_ReadOnlyProxy()\\nasync def create_named_worker(src='',name='',config=None,type='py'):\\n\\tC=name;B=config;from json import dumps\\n\\tif not src:D='Named workers require src';raise ValueError(D)\\n\\tif not C:D='Named workers require a name';raise ValueError(D)\\n\\tA=_js.document.createElement('script');A.type=type;A.src=src;_set(A,'worker');_set(A,'name',C)\\n\\tif B:_set(A,'config',isinstance(B,str)and B or dumps(B))\\n\\t_js.document.body.append(A);return await workers[C]\"\n  }\n};\n","import { typedSet } from \"type-checked-collections\";\nimport { dedent } from \"polyscript/exports\";\nimport toJSONCallback from \"to-json-callback\";\n\nimport { stdlib, optional } from \"./stdlib.js\";\n\nexport const main = (name) => hooks.main[name];\nexport const worker = (name) => hooks.worker[name];\n\nconst code = (hooks, branch, key, lib) => {\n    hooks[key] = () => {\n        const arr = lib ? [lib] : [];\n        arr.push(...branch(key));\n        return arr.map(dedent).join(\"\\n\");\n    };\n};\n\nexport const codeFor = (branch, type) => {\n    const pylib = type === \"mpy\" ? stdlib.replace(optional, \"\") : stdlib;\n    const hooks = {};\n    code(hooks, branch, `codeBeforeRun`, pylib);\n    code(hooks, branch, `codeBeforeRunAsync`, pylib);\n    code(hooks, branch, `codeAfterRun`);\n    code(hooks, branch, `codeAfterRunAsync`);\n    return hooks;\n};\n\nexport const createFunction = (self, name) => {\n    const cbs = [...worker(name)];\n    if (cbs.length) {\n        const cb = toJSONCallback(\n            self[`_${name}`] ||\n                (name.endsWith(\"Async\")\n                    ? async (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) await cb(wrap, xworker);\n                      }\n                    : (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) cb(wrap, xworker);\n                      }),\n        );\n        const a = cbs.map(toJSONCallback).join(\", \");\n        return Function(`return(w,x)=>(${cb})(w,x,...[${a}])`)();\n    }\n};\n\nconst SetFunction = typedSet({ typeof: \"function\" });\nconst SetString = typedSet({ typeof: \"string\" });\n\nexport const inputFailure = `\n    import builtins\n    def input(prompt=\"\"):\n        raise Exception(\"\\\\n           \".join([\n            \"input() doesn't work when PyScript runs in the main thread.\",\n            \"Consider using the worker attribute: https://pyscript.github.io/docs/2023.11.2/user-guide/workers/\"\n        ]))\n\n    builtins.input = input\n    del builtins\n    del input\n`;\n\nexport const hooks = {\n    main: {\n        /** @type {Set<function>} */\n        onWorker: new SetFunction(),\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString([inputFailure]),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n    worker: {\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction([\n            ({ interpreter }) => {\n                interpreter.registerJsModule(\"_pyscript\", {\n                    // cannot be imported from fs.js\n                    // because this code is stringified\n                    fs: {\n                        ERROR: \"storage permissions not granted\",\n                        NAMESPACE: \"@pyscript.fs\",\n                    },\n                    interpreter,\n                });\n            },\n        ]),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString(),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n};\n","// lazy loaded on-demand codemirror related files\nexport default {\n    get core() {\n        return import(/* webpackIgnore: true */ \"../3rd-party/codemirror.js\");\n    },\n    get state() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_state.js\"\n        );\n    },\n    get python() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_lang-python.js\"\n        );\n    },\n    get language() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_language.js\"\n        );\n    },\n    get view() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_view.js\"\n        );\n    },\n    get commands() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_commands.js\"\n        );\n    },\n};\n","/*! (c) PyScript Development Team */\n\nimport \"./zero-redirect.js\";\nimport stickyModule from \"sticky-module\";\nimport withResolvers from \"@webreflection/utils/with-resolvers\";\n\nimport {\n    INVALID_CONTENT,\n    Hook,\n    XWorker,\n    assign,\n    dedent,\n    define,\n    defineProperty,\n    dispatch,\n    isSync,\n    queryTarget,\n    unescape,\n    whenDefined,\n} from \"polyscript/exports\";\n\nimport \"./all-done.js\";\nimport TYPES from \"./types.js\";\nimport { configs, relative_url } from \"./config.js\";\nimport sync from \"./sync.js\";\nimport bootstrapNodeAndPlugins from \"./plugins-helper.js\";\nimport { ErrorCode } from \"./exceptions.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport {\n    hooks,\n    main,\n    worker,\n    codeFor,\n    createFunction,\n    inputFailure,\n} from \"./hooks.js\";\nimport * as fs from \"./fs.js\";\n\nimport codemirror from \"./plugins/codemirror.js\";\nexport { codemirror };\n\nimport { stdlib, optional } from \"./stdlib.js\";\nexport { stdlib, optional, inputFailure };\n\nexport const donkey = (options) =>\n    import(/* webpackIgnore: true */ \"./plugins/donkey.js\").then((module) =>\n        module.default(options),\n    );\n\n// generic helper to disambiguate between custom element and script\nconst isScript = ({ tagName }) => tagName === \"SCRIPT\";\n\n// Used to create either Pyodide or MicroPython workers\n// with the PyScript module available within the code\nconst [PyWorker, MPWorker] = [...TYPES.entries()].map(\n    ([TYPE, interpreter]) =>\n        /**\n         * A `Worker` facade able to bootstrap on the worker thread only a PyScript module.\n         * @param {string} file the python file to run ina worker.\n         * @param {{config?: string | object, async?: boolean}} [options] optional configuration for the worker.\n         * @returns {Promise<Worker & {sync: object}>}\n         */\n        async function PyScriptWorker(file, options) {\n            await configs.get(TYPE).plugins;\n            const xworker = XWorker.call(\n                new Hook(null, hooked.get(TYPE)),\n                file,\n                {\n                    ...options,\n                    type: interpreter,\n                },\n            );\n            assign(xworker.sync, sync);\n            return xworker.ready;\n        },\n);\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        PyWorker: exportedPyWorker,\n        MPWorker: exportedMPWorker,\n        hooks: exportedHooks,\n        config: exportedConfig,\n        whenDefined: exportedWhenDefined,\n    },\n    alreadyLive,\n] = stickyModule(\"@pyscript/core\", {\n    PyWorker,\n    MPWorker,\n    hooks,\n    config: {},\n    whenDefined,\n});\n\nexport {\n    TYPES,\n    relative_url,\n    exportedPyWorker as PyWorker,\n    exportedMPWorker as MPWorker,\n    exportedHooks as hooks,\n    exportedConfig as config,\n    exportedWhenDefined as whenDefined,\n};\n\nexport const offline_interpreter = (config) =>\n    config?.interpreter && relative_url(config.interpreter);\n\nconst hooked = new Map();\n\nfor (const [TYPE, interpreter] of TYPES) {\n    // avoid any dance if the module already landed\n    if (alreadyLive) break;\n\n    const dispatchDone = (element, isAsync, result) => {\n        if (isAsync) result.then(() => dispatch(element, TYPE, \"done\"));\n        else dispatch(element, TYPE, \"done\");\n    };\n\n    const { config, configURL, plugins, error } = configs.get(TYPE);\n\n    // create a unique identifier when/if needed\n    let id = 0;\n    const getID = (prefix = TYPE) => `${prefix}-${id++}`;\n\n    /**\n     * Given a generic DOM Element, tries to fetch the 'src' attribute, if present.\n     * It either throws an error if the 'src' can't be fetched or it returns a fallback\n     * content as source.\n     */\n    const fetchSource = async (tag, io, asText) => {\n        if (tag.hasAttribute(\"src\")) {\n            try {\n                return await fetch(tag.getAttribute(\"src\")).then(getText);\n            } catch (error) {\n                io.stderr(error);\n            }\n        }\n\n        if (asText) return dedent(tag.textContent);\n\n        const code = dedent(unescape(tag.innerHTML));\n        console.warn(\n            `Deprecated: use <script type=\"${TYPE}\"> for an always safe content parsing:\\n`,\n            code,\n        );\n        return code;\n    };\n\n    // register once any interpreter\n    let alreadyRegistered = false;\n\n    // allows lazy element features on code evaluation\n    let currentElement;\n\n    const registerModule = ({ XWorker, interpreter, io }) => {\n        // avoid multiple registration of the same interpreter\n        if (alreadyRegistered) return;\n        alreadyRegistered = true;\n\n        // automatically use the pyscript stderr (when/if defined)\n        // this defaults to console.error\n        function PyWorker(...args) {\n            const worker = XWorker(...args);\n            worker.onerror = ({ error }) => io.stderr(error);\n            return worker;\n        }\n\n        // enrich the Python env with some JS utility for main\n        interpreter.registerJsModule(\"_pyscript\", {\n            PyWorker,\n            fs,\n            interpreter,\n            js_import: (...urls) => Promise.all(urls.map((url) => import(url))),\n            get target() {\n                return isScript(currentElement)\n                    ? currentElement.target.id\n                    : currentElement.id;\n            },\n        });\n    };\n\n    // define the module as both `<script type=\"py\">` and `<py-script>`\n    // but only if the config didn't throw an error\n    if (!error) {\n        // ensure plugins are bootstrapped already before custom type definition\n        // NOTE: we cannot top-level await in here as plugins import other utilities\n        //       from core.js itself so that custom definition should not be blocking.\n        plugins().then(() => {\n            // possible early errors sent by polyscript\n            const errors = new Map();\n\n            // specific main and worker hooks\n            const hooks = {\n                main: {\n                    ...codeFor(main, TYPE),\n                    async onReady(wrap, element) {\n                        registerModule(wrap);\n\n                        // allows plugins to do whatever they want with the element\n                        // before regular stuff happens in here\n                        for (const callback of main(\"onReady\"))\n                            await callback(wrap, element);\n\n                        // now that all possible plugins are configured,\n                        // bail out if polyscript encountered an error\n                        if (errors.has(element)) {\n                            let { message } = errors.get(element);\n                            errors.delete(element);\n                            const clone = message === INVALID_CONTENT;\n                            message = `(${ErrorCode.CONFLICTING_CODE}) ${message} for `;\n                            message += element.cloneNode(clone).outerHTML;\n                            wrap.io.stderr(message);\n                            return;\n                        }\n\n                        if (isScript(element)) {\n                            const isAsync = !isSync(element);\n                            const target = element.getAttribute(\"target\");\n                            const show = target\n                                ? queryTarget(element, target)\n                                : document.createElement(\"script-py\");\n\n                            if (!target) {\n                                const { head, body } = document;\n                                if (head.contains(element)) body.append(show);\n                                else element.after(show);\n                            }\n                            if (!show.id) show.id = getID();\n\n                            // allows the code to retrieve the target element via\n                            // document.currentScript.target if needed\n                            defineProperty(element, \"target\", { value: show });\n\n                            // notify before the code runs\n                            dispatch(element, TYPE, \"ready\");\n                            dispatchDone(\n                                element,\n                                isAsync,\n                                wrap[`run${isAsync ? \"Async\" : \"\"}`](\n                                    await fetchSource(element, wrap.io, true),\n                                ),\n                            );\n                        } else {\n                            // resolve PyScriptElement to allow connectedCallback\n                            element._wrap.resolve(wrap);\n                        }\n                        console.debug(\"[pyscript/main] PyScript Ready\");\n                    },\n                    onWorker(_, xworker) {\n                        assign(xworker.sync, sync);\n                        for (const callback of main(\"onWorker\"))\n                            callback(_, xworker);\n                    },\n                    onBeforeRun(wrap, element) {\n                        currentElement = element;\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRun\",\n                        );\n                    },\n                    onBeforeRunAsync(wrap, element) {\n                        currentElement = element;\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRunAsync\",\n                        );\n                    },\n                    onAfterRun(wrap, element) {\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRun\",\n                        );\n                    },\n                    onAfterRunAsync(wrap, element) {\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRunAsync\",\n                        );\n                    },\n                },\n                worker: {\n                    ...codeFor(worker, TYPE),\n                    // these are lazy getters that returns a composition\n                    // of the current hooks or undefined, if no hook is present\n                    get onReady() {\n                        return createFunction(this, \"onReady\", true);\n                    },\n                    get onBeforeRun() {\n                        return createFunction(this, \"onBeforeRun\", false);\n                    },\n                    get onBeforeRunAsync() {\n                        return createFunction(this, \"onBeforeRunAsync\", true);\n                    },\n                    get onAfterRun() {\n                        return createFunction(this, \"onAfterRun\", false);\n                    },\n                    get onAfterRunAsync() {\n                        return createFunction(this, \"onAfterRunAsync\", true);\n                    },\n                },\n            };\n\n            hooked.set(TYPE, hooks);\n\n            define(TYPE, {\n                config,\n                configURL,\n                interpreter,\n                hooks,\n                env: `${TYPE}-script`,\n                version: offline_interpreter(config),\n                onerror(error, element) {\n                    errors.set(element, error);\n                },\n            });\n\n            customElements.define(\n                `${TYPE}-script`,\n                class extends HTMLElement {\n                    constructor() {\n                        assign(super(), {\n                            _wrap: withResolvers(),\n                            srcCode: \"\",\n                            executed: false,\n                        });\n                    }\n                    get id() {\n                        return super.id || (super.id = getID());\n                    }\n                    set id(value) {\n                        super.id = value;\n                    }\n                    async connectedCallback() {\n                        if (!this.executed) {\n                            this.executed = true;\n                            const isAsync = !isSync(this);\n                            const { io, run, runAsync } = await this._wrap\n                                .promise;\n                            this.srcCode = await fetchSource(\n                                this,\n                                io,\n                                !this.childElementCount,\n                            );\n                            this.replaceChildren();\n                            this.style.display = \"block\";\n                            dispatch(this, TYPE, \"ready\");\n                            dispatchDone(\n                                this,\n                                isAsync,\n                                (isAsync ? runAsync : run)(this.srcCode),\n                            );\n                        }\n                    }\n                },\n            );\n        });\n    }\n\n    // export the used config without allowing leaks through it\n    exportedConfig[TYPE] = structuredClone(config);\n}\n"],"names":["crypto","randomUUID","_","location","href","startsWith","replace","stickyModule","name","value","global","globalThis","symbol","Symbol","for","known","Object","defineProperty","withResolvers$1","Promise","withResolvers","bind","io","WeakMap","stdio","init","context","console","localIO","buffered","stderr","error","stdout","log","args","get","engine","interpreter","set","decoder","TextDecoder","callback","EOL","buffer","maybeUI8","Uint8Array","c","decode","splice","push","d","getOwnPropertyDescriptors","Response","prototype","isFunction","handler","p","k","hasOwnProperty","then","r","bypass","direct","fetch$1","input","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","result","target","IDBMap","EventTarget","db","options","transaction","what","how","t","this","onsuccess","onerror","objectStore","constructor","super","resolve","reject","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","call","has","getKey","getAllKeys","put","values","toStringTag","IDBMapSync","Map","queue","sync","dedent","object","string","s","i","l","arguments","content","line","split","trim","test","RegExp","$1","es","unes","cape","m","tpl","unescape","un","isArray","Array","create","defineProperties","$","absoluteURL","path","base","URL","fixedRelative","id","nodeInfo","node","tag","tagName","dispatch","worker","CE","CustomEvent","bubbles","detail","createResolved","module","config","run","code","runAsync","runEvent","dropLine0","createOverload","before","after","method","async","js_modules","jsModules","JSModules","ownKeys","field","proxy","modules","registerJSModules","Reflect","registerJSModule","importJS","source","import","esm","importCSS","onload","document","querySelector","head","append","createElement","rel","isCSS","pathname","isSync","element","getAttribute","RUNNING_IN_WORKER","window","writeFile","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","pop","join","current","branch","mkdir","cwd","concat","joinPaths","parts","res","part","filter","fetchBuffer","url","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","Error","endsWith","flatMap","to_folder","file","filename","slice","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","Set","sourceDest","add","calculateFilesPaths","fetchJSModules","main","promises","createProgress","getPrototypeOf","e","SharedArrayBuffer","maxByteLength","Math","random","toString","substring","n","ref","array","number","true","false","null","view","date","bigint","regexp","a","o","BigInt","ArrayBuffer","u","indexOf","Date","cause","TypeError","parse","JSON","f","isView","stringify","b","h","BYTES_PER_ELEMENT","byteOffset","byteLength","resizable","apply","subarray","flags","stack","toJSON","String","keyFor","loader","loadProgress","self","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","globals","registry","require","Function","dummy","transform","mip","TextEncoder","encode","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","populate","local","getLocalSet","remote","getRemoteSet","dst","reconcile","isRealDir","toAbsolute","root","join2","check","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","entry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","removeRemoteEntry","removeEntry","total","e2","getTime","sort","remove","reverse","relPath","normalize","NATIVEFS_ASYNC","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","getData","TMP","mpyPackage","install","FinalizationRegistry","onGarbageCollected","held","debug","nullHandler","hold","return","token","register","toJsOptions","dict_converter","fromEntries","overrideFunction","overrideMethod","overridden","applyOverride","proxies","onGC","destroy","patchArgs","deref","copy","WeakRef","indexURLs","pyodide","loadPyodide","experimental_create_proxy","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","revokeObjectURL","unpackArchive","ffi","_log","rest","loadPackage","micropip","set_index_urls","keep_going","frozen","freeze","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","index","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","data","webr","WebR","Shelter","warn","evalRVoid","env","configs","selectors","prefixes","$$","css","querySelectorAll","$x","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","snapshotItem","workers","ignore","workersHandler","promise","w","grow","Uint16Array","charCodeAt","DESTROY","createEncoder","ui16a","encoder","ARRAY","BIGINT","BOOLEAN","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","toConstructorName","numeric","CHANNEL","MAIN","WORKER","nothing","buffers","WeakSet","ID","native","defaults","Int32Array","useUTF16","circular","proxied","ok","UID","notify","Atomics","Number","coincident$1","checkTransferred","transfer","Worker","port1","channel","port2","MessageChannel","next","as","uid","wr","nextResolver","callbacks","resolving","cb","at","transferred.get","postMessage","setTimeout","clearTimeout","deadlock","addEventListener","stopImmediatePropagation","preventDefault","stop","onmessage","i32","transferred.set","DESTRUCT","symbols","toSymbol","eventsHandler","listener","invoke","__worker__","drop","ids","had","heap","toEntry","TYPE","fromEntry","numericTYPE","fn","currentTarget","methods","handleEvent","fromSymbol","asEntry","asImport","TRAP","descriptor","re","place","q","tracking","defaultEncoder","jsonEncoder","exports","coincident","original","minimal","minimalEncoder","terminate","getConfigURLAndType","configURL","resolveConfig","absolute","json","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","serviceWorker","service_worker","isHook","Hook","resolver","bootstrap","ready","configurable","isError","INVALID_CONTENT","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","details","XWorker","$xworker","closest","body","wn","sw","versionValue","configValue","workerName","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","v","cfg","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","$customObserver","dontBother","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element","TYPES","waitForIt","once","allPlugins","codemirror","codemirror$1","donkey","ErrorCode","CONFLICTING_CODE","BAD_CONFIG","FETCH_ERROR","FETCH_UNAUTHORIZED_ERROR","FETCH_FORBIDDEN_ERROR","FETCH_NOT_FOUND_ERROR","FETCH_SERVER_ERROR","FETCH_UNAVAILABLE_ERROR","UserError","errorCode","messageType","FetchError","getText","response","robustFetch","errMsg","errorMsg","status","statusText","configDetails","ext","expected","badURL","conflictError","reason","relative_url","syntaxError","str","plugins","parsed","pyElement","pyConfigs","attrConfigs","some","toBeAwaited","includes","notOnDOM","default","NAMESPACE","ERROR","idb","getFileSystemDirectoryHandle","hint","startIn","transient","showDirectoryPicker","requestPermission","navigator","userActivation","isActive","dialog","className","cancel","appendChild","showModal","is_pyterminal","sleep","seconds","bootstrapNodeAndPlugins","any","validator","Class","checks","C","failure","typedSet","fail","typeof","instanceof","checkFail","createSet","python","paths","_path","literal","pyscript","stdlib","optional","lib","arr","codeFor","pylib","createFunction","cbs","SetFunction","SetString","inputFailure","onBeforeRun","onBeforeRunAsync","onAfterRun","onAfterRunAsync","codeBeforeRun","codeBeforeRunAsync","codeAfterRun","codeAfterRunAsync","core","state","language","x","commands","isScript","PyWorker","MPWorker","hooked","exportedPyWorker","exportedMPWorker","exportedHooks","exportedConfig","exportedWhenDefined","offline_interpreter","dispatchDone","getID","fetchSource","asText","currentElement","alreadyRegistered","registerModule","js_import","urls","errors","clone","cloneNode","outerHTML","show","contains","_wrap","customElements","HTMLElement","srcCode","executed","connectedCallback","replaceChildren","style","display"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,69]}